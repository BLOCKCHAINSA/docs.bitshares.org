# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Fabian Schuh
# This file is distributed under the same license as the Graphene Technical
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Graphene Technical Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-03 11:56+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../source/user/account.rst:3
msgid "Accounts"
msgstr ""

#: ../../source/user/account.rst:5
msgid ""
"BitShares 2.0 accounts have to be registered on the blockchain. Upon "
"registration they are assigned an incrementing identifier (account id)."
msgstr ""

#: ../../source/user/account.rst:8
msgid ""
"This comes with many advantages: Besides improved scalability, we have "
"separated the identity from the transaction authorizing signature. In "
"practice, *owning an account name* is independent from being able to "
"*spend its funds*. Furthermore, both rights (we call them *permissions*) "
"can split among an arbitrary complex relation of people (we call them "
"*authorities*) using *weights* and a required *thresholds*."
msgstr ""

#: ../../source/user/account.rst:15
msgid ""
"Thanks to separating *authorities* from *identities*, BitShares 2.0 can "
"be much faster in processing delay while having much smaller transaction "
"sizes. Hence, all participants are forced to have a named account on the "
"blockchain. Furthermore, most transactions are tied to an account name "
"and can thus be linked to individuals (this includes transferes, trades, "
"shorts, etc. but not *stealthed* transactions)."
msgstr ""

#: ../../source/user/account.rst:22
msgid ""
"Even though an account is required to be registered properly, we offer "
"tools to improve privacy and anonymity."
msgstr ""

#: ../../source/user/account-create.rst:3
msgid "Account Registration"
msgstr ""

#: ../../source/user/account-create.rst:5
msgid ""
"In order to use BitShares, you will need to register an account.  All you"
" need to provide is"
msgstr ""

#: ../../source/user/account-create.rst:8
msgid "an account name"
msgstr ""

#: ../../source/user/account-create.rst:9
msgid "a password"
msgstr ""

#: ../../source/user/account-create.rst:11
msgid ""
"For regular users, please follow the instructions in the wallet to create"
" a new account:"
msgstr ""

#: ../../source/bitshares/register-ref.rst:1
msgid "`OpenLedger`_"
msgstr ""

#: ../../source/bitshares/register-ref.rst:2
msgid "`BitShares.org`_"
msgstr ""

#: ../../source/bitshares/register-ref.rst:3
msgid "`Decentral.exchange`_"
msgstr ""

#: ../../source/bitshares/register-ref.rst:4
msgid "BunkerDex (under construction)"
msgstr ""

#: ../../source/bitshares/register-ref.rst:5
msgid "*more to come*"
msgstr ""

#: ../../source/user/account-create.rst:16
msgid ""
"The identicon at the top can be used to verify your account name to third"
" parties. It is derived from your acocunt name and gives a second "
"verification factor. And this is how you register your account:"
msgstr ""

#: ../../source/user/account-create.rst:25
msgid ""
"Note that, in contrast to any other platform you have ever used: "
"**Creating an account at one of our partners will make your account "
"available at all the other partners as well.** Hence, your account name "
"can be seen similar to a mail address in such that it is **unique** and "
"every participant in the BitShares network can interact with you "
"independent of the actual partner providing the wallet."
msgstr ""

#: ../../source/user/account-create.rst:32
msgid ""
"We also provide a :doc:`tutorial <../tutorials/account-create>` on how to"
" **manually** register an account using the :doc:`CLI wallet "
"<../../integration/apps/cliwallet>`."
msgstr ""

#: ../../source/user/account-memberships.rst:3
msgid "Memberships"
msgstr ""

#: ../../source/user/account-memberships.rst:5
msgid ""
"Accounts in BitShares are separated into three groups. We decided to give"
" users the option to upgrade their accounts into a VIP-like status if "
"they desire and profit from reduced fees and additional features."
msgstr ""

#: ../../source/user/account-memberships.rst:10
msgid "Membership Groups"
msgstr ""

#: ../../source/user/account-memberships.rst:13
msgid "Non-Members"
msgstr ""

#: ../../source/user/account-memberships.rst:15
msgid "A *regular* account is a *non-member*."
msgstr ""

#: ../../source/user/account-memberships.rst:18
msgid "Lifetime Members"
msgstr ""

#: ../../source/user/account-memberships.rst:20
msgid ""
"Lifetime Members get a percentage cashback on every transaction fee they "
"pay and qualify to earn referral income from users they register with or "
"referer to the network. A Lifetime membership is associated with a "
"certain one-time fee that is defined by the committee."
msgstr ""

#: ../../source/user/account-memberships.rst:26
msgid "Anual Members"
msgstr ""

#: ../../source/user/account-memberships.rst:28
msgid ""
"If a lifetime membership is too much you can still get the same cashback "
"for the next year by becoming an annual subscriber for a smaller one-time"
" fee which lasts for only one year."
msgstr ""

#: ../../source/user/account-memberships.rst:34
msgid ""
"Technically, the fees that you pay stay the same, but a part of the fees "
"is refunded in the form of a *vesting balance*.Once the fees have vested "
"you can withdraw them. To see your vesting balances, go to your "
"\"Account\" tab, then click on \"vesting balances\" at the bottom left. "
"Vesting balances are recalculated hourly, so you might not yet see them "
"right away."
msgstr ""

#: ../../source/user/account-memberships.rst:43
msgid ""
"Due to some discrepancies, the annual membership has been disabled in "
"most web wallets and will be re-enabled after a proper update eventually."
msgstr ""

#: ../../source/user/account-memberships.rst:48
msgid "Fees"
msgstr ""

#: ../../source/user/account-memberships.rst:50
msgid ""
"Every time an account you referred pays a transaction fee, that fee is "
"divided among several different accounts. The network takes a cut, and "
"the Lifetime Member who referred the account gets a cut."
msgstr ""

#: ../../source/user/account-memberships.rst:54
msgid ""
"The registrar is the account that paid the transaction fee to register "
"the account with the network. The registrar gets to decide how to divide "
"the remaining fee between themselves and their own affiliate."
msgstr ""

#: ../../source/user/account-memberships.rst:59
msgid "Pending Fees"
msgstr ""

#: ../../source/user/account-memberships.rst:61
msgid ""
"Fees paid are only divided among the network, referrers, and registrars "
"once every maintenance interval."
msgstr ""

#: ../../source/user/account-memberships.rst:65
msgid "Vesting Fees"
msgstr ""

#: ../../source/user/account-memberships.rst:67
msgid ""
"Most fees are made available immediately, but fees over the vesting "
"threshold (such as those paid to upgrade your membership or register a "
"premium account name) must vest for some days as defined by the "
"committee."
msgstr ""

#: ../../source/user/account-permissions.rst:3
msgid "Permissions"
msgstr ""

#: ../../source/user/account-permissions.rst:5
msgid "In BitShares, each account is separated into"
msgstr ""

#: ../../source/user/account-permissions.rst:7
#: ../../source/user/security-permissions.rst:7
msgid ""
"**Owner Permission**: This permission has administrative powers over the "
"whole account and should be considered for 'backup' strategies."
msgstr ""

#: ../../source/user/account-permissions.rst:8
#: ../../source/user/security-permissions.rst:8
msgid ""
"**Active Permission**: Allows to access funds and some account settings, "
"but cannot change the owner permission and is thus considered the "
"\"online\" permissions."
msgstr ""

#: ../../source/user/account-permissions.rst:10
msgid ""
"Both can be defined in the `Permissions` tab of your account using so "
"called *authorities* (see below) together with a so called *threshold* "
"that has to be exceeded in order for a transaction to be valid."
msgstr ""

#: ../../source/user/account-permissions.rst:15
msgid "Authorities"
msgstr ""

#: ../../source/user/account-permissions.rst:17
msgid ""
"In BitShares an *authority* consists of one or many entities that "
"authorize an action, such as transfers or trades."
msgstr ""

#: ../../source/user/account-permissions.rst:20
msgid ""
"An authority consists of one or several pairs of an account name with a "
"*weight*."
msgstr ""

#: ../../source/user/account-permissions.rst:23
msgid ""
"In order to obtain a valid transaction, the sum of the weights from "
"signing the parties has to exceed the threshold as defined in the "
"permissions."
msgstr ""

#: ../../source/user/account-permissions.rst:27
#: ../../source/user/referral-program.rst:71
msgid "Examples"
msgstr ""

#: ../../source/user/account-permissions.rst:29
msgid ""
"Let's discuss some examples to shed some light on the used terminology "
"and the use-cases. We assume that a new account is created with it's "
"active permissions set as described below. Note that the same scheme also"
" works for the owner permissions!"
msgstr ""

#: ../../source/user/account-permissions.rst:35
msgid "(Flat) Multi-Signature"
msgstr ""

#: ../../source/user/account-permissions.rst:37
msgid ""
"A flat multi-signature scheme is composed of ``M`` entities of which "
"``N`` entities must sign in order for the transaction to be valid. Now, "
"in BitShares, we have *weights* and a *threshold* instead of ``M`` and "
"``N``. Still we can achieve the very same thing with even more "
"flexibility as we will see now."
msgstr ""

#: ../../source/user/account-permissions.rst:42
msgid ""
"Let's assume, Alice, Bob, Charlie and Dennis have common funds. We want "
"to be able to construct a valid transaction if only two of those agree. "
"Hence a **2-of-4** (N-of-M) scheme can look as follows:"
msgstr ""

#: ../../source/user/account-permissions.rst:47
#: ../../source/user/account-permissions.rst:101
#: ../../source/user/account-permissions.rst:146
msgid "Account"
msgstr ""

#: ../../source/user/account-permissions.rst:47
#: ../../source/user/account-permissions.rst:101
#: ../../source/user/account-permissions.rst:146
#: ../../source/user/account-permissions.rst:176
msgid "Weight"
msgstr ""

#: ../../source/user/account-permissions.rst:49
#: ../../source/user/account-permissions.rst:103
msgid "Alice"
msgstr ""

#: ../../source/user/account-permissions.rst:49
#: ../../source/user/account-permissions.rst:51
#: ../../source/user/account-permissions.rst:53
#: ../../source/user/account-permissions.rst:55
msgid "1"
msgstr ""

#: ../../source/user/account-permissions.rst:51
#: ../../source/user/account-permissions.rst:105
msgid "Bob"
msgstr ""

#: ../../source/user/account-permissions.rst:53
#: ../../source/user/account-permissions.rst:107
msgid "Charlie"
msgstr ""

#: ../../source/user/account-permissions.rst:55
#: ../../source/user/account-permissions.rst:109
msgid "Dennis"
msgstr ""

#: ../../source/user/account-permissions.rst:57
#: ../../source/user/account-permissions.rst:111
#: ../../source/user/account-permissions.rst:152
#: ../../source/user/account-permissions.rst:188
msgid "**Threshold:**"
msgstr ""

#: ../../source/user/account-permissions.rst:57
msgid "3"
msgstr ""

#: ../../source/user/account-permissions.rst:60
msgid ""
"This means that each party has the same weight of 1 while 3 parties need "
"to sign the transaction/proposal."
msgstr ""

#: ../../source/user/account-permissions.rst:63
msgid ""
"In other words: Alice, Bobe, Charlie and Dennis, each have 33% weight "
"while 100% must be reached."
msgstr ""

#: ../../source/user/account-permissions.rst:85
msgid ""
"All four participants have a weight of 33% but the threshold is set to "
"51%. Hence only two out of the four need to agree to validate the "
"transaction."
msgstr ""

#: ../../source/user/account-permissions.rst:88
msgid ""
"Alternatively, to construct a 3-of-4 scheme, we can either decrease the "
"weights to 17 or increase the threshold to 99%."
msgstr ""

#: ../../source/user/account-permissions.rst:92
msgid "(Flat) Flexible Multi-Signature"
msgstr ""

#: ../../source/user/account-permissions.rst:94
msgid ""
"With the threshold and weights, we now have more flexibility over our "
"funds, or more precisely, we have more *control*. For instance, we can "
"have separate weights for different people. Let's assume Alice wants to "
"secure here funds against theft by a multi-signature scheme but she does "
"not want to hand over too much control to her friends. Hence, we create "
"an authority similar to:"
msgstr ""

#: ../../source/user/account-permissions.rst:103
msgid "49%"
msgstr ""

#: ../../source/user/account-permissions.rst:105
#: ../../source/user/account-permissions.rst:107
msgid "25%"
msgstr ""

#: ../../source/user/account-permissions.rst:109
#: ../../source/user/account-permissions.rst:184
#: ../../source/user/account-permissions.rst:186
msgid "10%"
msgstr ""

#: ../../source/user/account-permissions.rst:111
#: ../../source/user/account-permissions.rst:148
#: ../../source/user/account-permissions.rst:150
#: ../../source/user/account-permissions.rst:152
#: ../../source/user/account-permissions.rst:178
#: ../../source/user/account-permissions.rst:188
msgid "51%"
msgstr ""

#: ../../source/user/account-permissions.rst:133
msgid ""
"Now the funds can either be accessed by Alice and a single friend or by "
"all three friends together."
msgstr ""

#: ../../source/user/account-permissions.rst:137
msgid "Multi-Hierarchical Flexible Multi-Signature"
msgstr ""

#: ../../source/user/account-permissions.rst:139
msgid ""
"Let's take a look at a simple multi-hierarchical corporate account setup."
"  We are looking at a company that has a Chief of Financial Officer (CFO)"
" and a some departments working for him, such as the Treasurer, "
"Controller, Tax Manager, Accounting, etc. The company also has a CEO that"
" wants to have spending privileges. Hence we construct an authority for "
"the funds according to:"
msgstr ""

#: ../../source/user/account-permissions.rst:148
msgid "CEO.COMPANY"
msgstr ""

#: ../../source/user/account-permissions.rst:150
#: ../../source/user/account-permissions.rst:176
msgid "CFO.COMPANY"
msgstr ""

#: ../../source/user/account-permissions.rst:172
msgid ""
"whereas CEO.COMPANY and CFO.COMPANY have their own authorities. For "
"instance, the CFO.COMPANY account could look like:"
msgstr ""

#: ../../source/user/account-permissions.rst:178
msgid "Chief.COMPANY"
msgstr ""

#: ../../source/user/account-permissions.rst:180
msgid "Treasurer.COMPANY"
msgstr ""

#: ../../source/user/account-permissions.rst:180
#: ../../source/user/account-permissions.rst:182
msgid "33%"
msgstr ""

#: ../../source/user/account-permissions.rst:182
msgid "Controller.COMPANY"
msgstr ""

#: ../../source/user/account-permissions.rst:184
msgid "Tax Manager.COMPANY"
msgstr ""

#: ../../source/user/account-permissions.rst:186
msgid "Accounting.COMPANY"
msgstr ""

#: ../../source/user/account-permissions.rst:217
msgid "This scheme allows:"
msgstr ""

#: ../../source/user/account-permissions.rst:219
msgid "the CEO to spend funds"
msgstr ""

#: ../../source/user/account-permissions.rst:220
msgid "the Chief of Finance Officer to spend funds"
msgstr ""

#: ../../source/user/account-permissions.rst:221
msgid "Treasurer together with Controller to spend funds"
msgstr ""

#: ../../source/user/account-permissions.rst:222
msgid ""
"Controller or Treasurer together with wither the Tax Manager or "
"Accounting to spend funds."
msgstr ""

#: ../../source/user/account-permissions.rst:225
msgid ""
"Hence, a try of arbitrary depth can be spanned in order to construct a "
"flexible authority to reflect mostly any business use-case."
msgstr ""

#: ../../source/user/assets.rst:6
msgid "Assets/Tokens"
msgstr ""

#: ../../source/user/assets.rst:8
msgid ""
"The BitShares 2.0 network consist of several *assets*, *tokens* or "
"*currencies*. All assets are equal from a technological point of view and"
" come with more or less the same features, namely, they can be traded "
"against each other and can be transfered within seconds. The differences "
"between them are of economical nature."
msgstr ""

#: ../../source/user/assets.rst:14
#: ../../source/user/dex-margin-mechanics.rst:95
msgid ""
":html:`<div class=\"container-fluid\"><div class=\"row\"><div class"
"=\"col-md-6\">`"
msgstr ""

#: ../../source/user/assets.rst:16
msgid "**User Issued Assets (UIAs)**"
msgstr ""

#: ../../source/user/assets.rst:18
msgid ""
"Freely traded tokens created by individuals used for a variety of use-"
"cases, such as stock, miles, event tickets or reputation points."
msgstr ""

#: ../../source/user/assets.rst:22 ../../source/user/assets.rst:33
#: ../../source/user/assets.rst:45 ../../source/user/assets.rst:54
#: ../../source/user/assets.rst:64 ../../source/user/assets.rst:75
msgid "Read more ..."
msgstr ""

#: ../../source/user/assets.rst:23 ../../source/user/assets.rst:46
#: ../../source/user/assets.rst:65
#: ../../source/user/dex-margin-mechanics.rst:107
msgid ":html:`</div><div class=\"col-md-6\">`"
msgstr ""

#: ../../source/user/assets.rst:25
msgid "**Market-Pegged Assets (MPA)**"
msgstr ""

#: ../../source/user/assets.rst:27
msgid ""
"These *SmartCoins* track the value of an underlaying asset, such as Gold,"
" or U.S. Dollar. Smartcoins can be created by anyone contracting with the"
" BitShares ecosystem and putting sufficient BTS (at least 175%) into the "
"so called contract for difference as *collateral*."
msgstr ""

#: ../../source/user/assets.rst:34 ../../source/user/assets.rst:55
msgid ":html:`</div></div>` :html:`<div class=\"row\"><div class=\"col-md-6\">`"
msgstr ""

#: ../../source/user/assets.rst:37
msgid "**Exchange Backed Assets (EBA)**"
msgstr ""

#: ../../source/user/assets.rst:39
msgid ""
"This kind of asset is commonly known as *I owe you* (IOU). It represents "
"the right to withdraw the *same amount* (minus fees) of a backing asset "
"from a *central* entity. Often they are issued by a bank, an exchange or "
"an other financial institute to represent deposit receipts."
msgstr ""

#: ../../source/user/assets.rst:48
msgid "**Privatized Bit-Assets**"
msgstr ""

#: ../../source/user/assets.rst:50
msgid ""
"A flexible mixture between UIA and MPA that allows 3rd parties to create "
"their own customized MPAs."
msgstr ""

#: ../../source/user/assets.rst:58
msgid "**Fee Backed Assets**"
msgstr ""

#: ../../source/user/assets.rst:60
msgid ""
"An FBA is a token that pays you a fraction of the transaction fees "
"generated by a particular feature that has been funded independent of "
"BitShares."
msgstr ""

#: ../../source/user/assets.rst:67
msgid "**Prediction Market Asset**"
msgstr ""

#: ../../source/user/assets.rst:70
msgid ""
"A prediction market is similar to a MPA, that trades between 0 and 1, "
"only. After an event, a price feed can be used to determine which option "
"to take and participants can settle at this price."
msgstr ""

#: ../../source/user/assets.rst:76
msgid ":html:`</div><div class=\"col-md-6\">` :html:`</div></div></div>`"
msgstr ""

#: ../../source/user/assets.rst:80 ../../source/user/eba.rst:35
#: ../../source/user/index.rst:63 ../../source/user/mpa.rst:106
#: ../../source/user/uia.rst:57
msgid "Frequently Asked Questions"
msgstr ""

#: ../../source/user/assets.rst:88 ../../source/user/committee.rst:37
#: ../../source/user/eba.rst:46 ../../source/user/mpa.rst:114
#: ../../source/user/uia.rst:65 ../../source/user/vesting.rst:42
msgid "Tutorials"
msgstr ""

#: ../../source/user/assets.rst:99
msgid ":html:`<!-- Adding the toctree`"
msgstr ""

#: ../../source/user/assets.rst:110
msgid ":html:`//-->`"
msgstr ""

#: ../../source/user/assets-faq.rst:3
msgid "Assets FAQ"
msgstr ""

#: ../../source/user/assets-faq.rst:6
msgid "General"
msgstr ""

#: ../../source/user/assets-faq.rst:9
msgid "What happens to the asset creation fee?"
msgstr ""

#: ../../source/user/assets-faq.rst:11
#, python-format
msgid ""
"50% of the asset creation fee are used to pre-fill the assets fee pool. "
"From the other 50%, 20% go to the network and 80% go to the referral "
"program. This means, that if you are a life-time member, you get back 40%"
" of the asset creation fee after the vesting period (currently 90 days)."
msgstr ""

#: ../../source/user/assets-faq.rst:18
msgid "Can I change `x` after creation of the asset"
msgstr ""

#: ../../source/user/assets-faq.rst:20
msgid "The following parameters can be changed after creation:"
msgstr ""

#: ../../source/user/assets-faq.rst:22
msgid "Issuer"
msgstr ""

#: ../../source/user/assets-faq.rst:23
msgid "UIA-Options:"
msgstr ""

#: ../../source/user/assets-faq.rst:25
msgid "Max Supply"
msgstr ""

#: ../../source/user/assets-faq.rst:26
msgid "Market Fee"
msgstr ""

#: ../../source/user/assets-faq.rst:27
msgid "Permissions (disable only/nor re-enable)"
msgstr ""

#: ../../source/user/assets-faq.rst:28
msgid "Flags (if permissions allow it)"
msgstr ""

#: ../../source/user/assets-faq.rst:29
msgid "Core exchange rate"
msgstr ""

#: ../../source/user/assets-faq.rst:30
msgid "White/Black Listing"
msgstr ""

#: ../../source/user/assets-faq.rst:31
msgid "Description"
msgstr ""

#: ../../source/user/assets-faq.rst:33
msgid "MPG-Options:"
msgstr ""

#: ../../source/user/assets-faq.rst:35
msgid "Feed Life Time"
msgstr ""

#: ../../source/user/assets-faq.rst:36
msgid "Minimum Feeds"
msgstr ""

#: ../../source/user/assets-faq.rst:37
msgid "Force Settlement Offset/Delay/Volume"
msgstr ""

#: ../../source/user/assets-faq.rst:39
msgid "Things that cannot be changes:"
msgstr ""

#: ../../source/user/assets-faq.rst:41
msgid "Symbol"
msgstr ""

#: ../../source/user/assets-faq.rst:42
msgid "Precision"
msgstr ""

#: ../../source/user/assets-faq.rst:44
msgid "A tutorial can be found :doc:`here <../tutorials/uia-update-manual>`."
msgstr ""

#: ../../source/user/assets-faq.rst:47
msgid "What about Parent and Child assets?"
msgstr ""

#: ../../source/user/assets-faq.rst:49
msgid ""
"A **parent**/**child** relation ship for assets can be represented by the"
" name of the symbol, e.g.::"
msgstr ""

#: ../../source/user/assets-faq.rst:54
msgid "can only be created by the issuer of ``PARENT`` and no one else."
msgstr ""

#: ../../source/user/assets-faq.rst:57
msgid "Changing the issuer"
msgstr ""

#: ../../source/user/assets-faq.rst:59
msgid ""
"The current issue of an asset may transfer ownership of the asset to "
"someone else by changing the issuer in the asset's settings."
msgstr ""

#: ../../source/user/assets-faq.rst:63
msgid "Fee Pool"
msgstr ""

#: ../../source/user/assets-faq.rst:66
msgid "What is the fee pool all about?"
msgstr ""

#: ../../source/user/assets-faq.rst:68
msgid ""
"The fee pool allows participants in the network to deal with assets and "
"pay for the transaction fees without the need to hold BTS. Any "
"transaction fee can be paid by paying any asset that has a core exchange "
"rate (i.e. a price) at which the asset can be exchange implicitly into "
"BTS to cover the network fee. If the asset's fee pool is funded, the fees"
" can be payed in the native UIA instead of BTS."
msgstr ""

#: ../../source/user/assets-faq.rst:75
msgid ""
"The core exchange rate at which a fee can be exchanged into BTS may "
"differ from the actual market valuation of the asset. A user, thus, may "
"pay a premium or spare funds by paying in BTS."
msgstr ""

#: ../../source/user/assets-faq.rst:80
msgid ""
"Make sure your core exchange rate is higher than the lowest ask, "
"otherwise, people will buy your token from the market and drain your fee "
"pool via implicit abitrage."
msgstr ""

#: ../../source/user/assets-faq.rst:84
msgid ""
"It is the task of the issuer to keep the fee pool funded and the core "
"exchange rate updated unless he wants the owner of his asset to be "
"required to hold BTS for the fee."
msgstr ""

#: ../../source/user/assets-faq.rst:89
msgid "What to do if the fee pool is empty?"
msgstr ""

#: ../../source/user/assets-faq.rst:91 ../../source/user/assets-faq.rst:131
msgid ""
"Open up the issuer's account, click the assets tab and open up the dialog"
" to change the asset. There will be a fee pool tab that allows you to "
"fund the fee pool and claim the accumulated fees!"
msgstr ""

#: ../../source/user/assets-faq.rst:96
msgid "What is Fee Pool Draining?"
msgstr ""

#: ../../source/user/assets-faq.rst:98
#, python-format
msgid ""
"If an order is created and paid in a non-BTS asset, the fee is implicitly"
" exchange into BTS to pay the network fee. However, if the order is "
"canceled, 90% of the fee will be returned as BTS. The result is, that if "
"the core exchange rate is lower than the highest bid, people can simply "
"buy your token from the market, and exchange them implicitly with the fee"
" pool by creating and canceling an order. This will deplete the fee pool "
"and leave the issuer with his tokens at a slight loss (depending on the "
"offset of the core exchange rate). For this reason, we recommend to use a"
" core exchange that is slightly higher than the market price of your "
"asset. As a consequence, paying fees in BTS should always be cheaper."
msgstr ""

#: ../../source/user/assets-faq.rst:111
msgid "Market Fees"
msgstr ""

#: ../../source/user/assets-faq.rst:114
msgid "What happens if I enable Market fees?"
msgstr ""

#: ../../source/user/assets-faq.rst:116
msgid ""
"If *Market Fees* of a UIA are turned on, fees have to be payed for each "
"**market transaction**. This means, that market fees only apply to "
"**filled orders**!"
msgstr ""

#: ../../source/user/assets-faq.rst:120
msgid ""
"The percentage of market fees that are applied can be defined and changed"
" by the issuer and any fee generated that way will be accumulated for "
"each asset only to be claimed by the issuer."
msgstr ""

#: ../../source/user/assets-faq.rst:124
#, python-format
msgid ""
"If the Market Fee is set to 1%, the issuer will earn 1% of market volume "
"as profit. These profits are accumulated for each UIA and can be "
"withdrawn by the issuer."
msgstr ""

#: ../../source/user/assets-faq.rst:129
msgid "How to claim accumulated fees?"
msgstr ""

#: ../../source/user/assets-faq.rst:136
msgid "What if two different market fees are involved in a trade?"
msgstr ""

#: ../../source/user/assets-faq.rst:138
msgid ""
"Suppose, I set the market fee for MyUIA market at 0.1%. and the market "
"fee for YourUIA market at 0.3%."
msgstr ""

#: ../../source/user/assets-faq.rst:141
msgid ""
"In BitShares, You pay the fee upon **receiving an asset**. Hence, one "
"side will pay 0.3% the other will pay 0.1%."
msgstr ""

#: ../../source/user/assets-faq.rst:145
msgid "What are Asset Flags and Permissions?"
msgstr ""

#: ../../source/user/assets-faq.rst:147
msgid ""
"When an asset is creatd, the issuer can set any combination of "
"flags/permissions. **Flags** are set in stone unless there is "
"**permission** to edit. Once a permission to edit is revoked, flags are "
"permanent, and can never be modified again."
msgstr ""

#: ../../source/user/assets-faq.rst:153
msgid "What are the Permissions:"
msgstr ""

#: ../../source/user/assets-faq.rst:155
msgid "Enable market fee"
msgstr ""

#: ../../source/user/assets-faq.rst:156
msgid "Require holders to be white-listed"
msgstr ""

#: ../../source/user/assets-faq.rst:157
msgid "Issuer may transfer asset back to himself"
msgstr ""

#: ../../source/user/assets-faq.rst:158
msgid "Issuer must approve all transfers"
msgstr ""

#: ../../source/user/assets-faq.rst:159
msgid "Disable confidential transactions"
msgstr ""

#: ../../source/user/assets-faq.rst:162
msgid "What are the Flags?"
msgstr ""

#: ../../source/user/assets-faq.rst:164
msgid ""
"``charge_market_fee``: an issuer-specified percentage of all market "
"trades in this asset is paid to the issuer"
msgstr ""

#: ../../source/user/assets-faq.rst:167
msgid "``white_list``: accounts must be white-listed in order to hold this asset"
msgstr ""

#: ../../source/user/assets-faq.rst:169
msgid "``override_authority``: issuer may transfer asset back to himself"
msgstr ""

#: ../../source/user/assets-faq.rst:171
msgid ""
"``transfer_restricted``: require the issuer to be one party to every "
"transfer"
msgstr ""

#: ../../source/user/assets-faq.rst:173
msgid "``disable_force_settle``: disable force settling"
msgstr ""

#: ../../source/user/assets-faq.rst:175
msgid ""
"``global_settle``: (only for bitassets) allows bitasset issuer to force a"
" global settling - this may be set in permissions, but should not be set "
"as flag unless, for instance, a prediction market has to be resolved. If "
"this flag has been enabled, no further shares can be borrowed!"
msgstr ""

#: ../../source/user/assets-faq.rst:180
msgid ""
"``disable_confidential``: allow the asset to be used with confidential "
"transactions"
msgstr ""

#: ../../source/user/assets-faq.rst:182
msgid "``witness_fed_asset``: allow the asset to be fed by witnesses"
msgstr ""

#: ../../source/user/assets-faq.rst:184
msgid "``committee_fed_asset``: allow the asset to be fed by the committee"
msgstr ""

#: ../../source/user/assets-faq.rst:188 ../../source/user/mpa.rst:3
msgid "Market Pegged Assets"
msgstr ""

#: ../../source/user/assets-faq.rst:191
msgid "Can I use the same flags/permissions as for UIAs?"
msgstr ""

#: ../../source/user/assets-faq.rst:193
msgid "Yes!"
msgstr ""

#: ../../source/user/assets-faq.rst:196
msgid "What are market-pegged-asset-specific parameters"
msgstr ""

#: ../../source/user/assets-faq.rst:198
msgid ""
"``feed_lifetime_sec``: The lifetime of a feed. After this time (in "
"seconds) a feed is no longer considered *valid*."
msgstr ""

#: ../../source/user/assets-faq.rst:201
msgid ""
"``minimum_feeds``: The number of feeds required for a market to become "
"(and stay) active."
msgstr ""

#: ../../source/user/assets-faq.rst:203
msgid ""
"``force_settlement_delay_sec``: The delay between requesting a settlement"
" and actual execution of settlement (in seconds)"
msgstr ""

#: ../../source/user/assets-faq.rst:206
msgid ""
"``force_settlement_offset_percent``: A percentage offset from the price "
"feed for settlement (`100% = 10000`)"
msgstr ""

#: ../../source/user/assets-faq.rst:208
msgid ""
"``maximum_force_settlement_volume``: Maximum percentage of the supply "
"that can be settled per day (`100% = 10000`)"
msgstr ""

#: ../../source/user/assets-faq.rst:210
msgid ""
"``short_backing_asset``: The asset that has to be used to *back* this "
"asset (when borrowing)"
msgstr ""

#: ../../source/user/committee.rst:3
msgid "Committee"
msgstr ""

#: ../../source/user/committee.rst:5
msgid ""
"Since Bitcoin struggled to reach a consensus about the size of their "
"blocks, the people in the cryptocurrency space realized that the "
"governance of a DAC should not be ignored. Hence, BitShares offers a "
"tools to reach on-chain consensus about business management decisions."
msgstr ""

#: ../../source/user/committee.rst:10
msgid ""
"The BitShares blockchain has a set of parameters available that are "
"subject of shareholder approval. Shareholders can define their preferred "
"set of parameters and thereby create a so called *committee member* or "
"alternatively vote for an existing committee member. The BitShares "
"committee consists of several *active* committee members."
msgstr ""

#: ../../source/user/committee.rst:16
msgid ""
"The BitShares ecosystem has a set of parameters available that are "
"subject of shareholder approval. Initially, BitShares has the following "
"blockchain parameters:"
msgstr ""

#: ../../source/user/committee.rst:20
msgid ""
"**fee structure**:         *fess that have to be paid by customers for "
"individual transactions*"
msgstr ""

#: ../../source/user/committee.rst:21
msgid ""
"**block interval**:        *i.e. block interval, max size of "
"block/transaction*"
msgstr ""

#: ../../source/user/committee.rst:22
msgid "**expiration parameters**: *i.e. maximum expiration interval*"
msgstr ""

#: ../../source/user/committee.rst:23
msgid ""
"**witness parameters**:    *i.e. maximum amount of witnesses (block "
"producers)*"
msgstr ""

#: ../../source/user/committee.rst:24
msgid "**committee parameters**:  *i.e. maximum amount of committee members*"
msgstr ""

#: ../../source/user/committee.rst:25
msgid "**witness pay**:           *payment for each witnesses per signed block*"
msgstr ""

#: ../../source/user/committee.rst:26
msgid ""
"**worker budget**:         *available budget available for budget items "
"(e.g. development)*"
msgstr ""

#: ../../source/user/committee.rst:28
msgid ""
"Please note that the given set of parameters serves as an example and "
"that the network's parameters are subject to change over time."
msgstr ""

#: ../../source/user/committee.rst:31
msgid ""
"Additionally to defining the parameters any active witness can propose a "
"protocol or business upgrade (i.e. hard fork) which can be voted on (or "
"against) by shareholders. When the total votes for the hard fork are "
"greater than the median witness weight `w` then the hard fork takes "
"effect."
msgstr ""

#: ../../source/user/dex.rst:3
msgid "Decentralized Exchange"
msgstr ""

#: ../../source/user/dex.rst:5
msgid ""
"The decentralized exchange (further denoted simply as *the DEX*) allows "
"for direct exchange of digital goods traded in the BitShares ecosystem."
msgstr ""

#: ../../source/user/dex.rst:8
msgid ""
"A decentralized exchange has a very particular set of advantages over "
"traditional centralized exchanges and we would like to address some of "
"them briefly below. Although the BitShares DEX comes with all of them, it"
" is up to the reader and customer to leverage those features in full or "
"only partially."
msgstr ""

#: ../../source/user/dex.rst:13
msgid ""
"**Separation of Powers**: There is no reason why the same entity needs to"
" be responsible for issuing IOUs and for processing the order book. In "
"BitShares, order matching is performed by the protocol, which is unaware "
"of implications concerning the involved assets."
msgstr ""

#: ../../source/user/dex.rst:18
msgid ""
"**Global Unified Order Book**: Since BitShares is global, anybody with an"
" internet access can use the DEX for trading. This brings the world's "
"liquidity to a single order book for decentralized trading."
msgstr ""

#: ../../source/user/dex.rst:22
msgid ""
"**Trade Almost Anything**: The BitShares DEX is asset agnostic. Hence you"
" can trade at **any** pair. While some pairs may end up with low "
"liquidity, such as SILVER:GOLD, other pairs such as USD:EUR for FOREX "
"trading will see huge volume."
msgstr ""

#: ../../source/user/dex.rst:26
msgid ""
"**No Limits**: The BitShares protocol is unable to limit your trading "
"experience."
msgstr ""

#: ../../source/user/dex.rst:28
msgid ""
"**Decentralized**: The DEX is decentralized across the globe. This not "
"only means that there is no single point of failure, but it also implies "
"that the BitShares exchange is open for trading 24/7 because it's always "
"daytime somewhere."
msgstr ""

#: ../../source/user/dex.rst:32
msgid ""
"**Secure**: Your funds and trades are secured with industry-grade "
"elliptic curve cryptography. No one will be able to access your funds "
"unless you let them. To further strengthen the security, we allow our "
"customers to setup escrow and multi-signature schemes."
msgstr ""

#: ../../source/user/dex.rst:37
msgid ""
"**Fast**: In contrast to other decentralized networks, the BitShares DEX "
"allows for real-time trading and is only limited by the speed of light "
"and the size of the planet."
msgstr ""

#: ../../source/user/dex.rst:41
msgid ""
"**Provable Order Matching Algorithm**: What makes the BitShares DEX "
"unique is the provable order matching algorithm. Given a set of orders, "
"you will always be able to provably verify that these orders have been "
"matched properly."
msgstr ""

#: ../../source/user/dex.rst:45
msgid ""
"**Collateralized Smartcoins**: One of the biggest features of BitShares "
"are its *smartcoins* such as bitUSD, bitEUR, bitCNY, and others. For the "
"sake of convenience, these assets are denotes simply as USD, EUR, CNY, "
"etc. in the wallet. These digital tokens represent the same value as "
"their underlaying physical asset. Hence 1 USD in this wallet is worth $1 "
"and can be redeemed as such. Any of these tokens is backed by BitShares' "
"company shares (BTS) being locked up as collateral and being available "
"for settlement at its current price."
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:8
msgid "Margin call mechanics"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:10
msgid ""
"The mechanics of a margin call in Bitshares are currently poorly "
"understood, so I'd like to try to clarify a little by using examples from"
" the ``USD:BTS`` market. I think part of the current confusion lies in "
"people talking about the same market but using different market "
"directions, ie. ``USD:BTS`` or ``BTS:USD``, so terms like above/below "
"don't mean the same thing to different people. I will only use USD in "
"these examples, but USD can be replaced by any bit asset in this context."
" I prefer to use the ``USD:BTS`` market direction, so these examples will"
" have prices in BTS/USD."
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:20
msgid "What is a margin call?"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:22
msgid ""
"A margin call is the market forcing you to sell your collateral in order "
"to buy enough USD to close your position. In the USD:BTS market a margin "
"call is equivalent to a bid: it is an order to buy USD for BTS."
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:26
msgid ""
"A margin call will happen because the price has increased to the point "
"where your collateral is insufficient with respect to the current "
"collateral requirements of the Bitshares market rules. The required "
"collateral is a tuneable parameter in Bitshares, set by the maintenance "
"collateral ratio (MCR) which is maintained by the feed producers (ie. the"
" witnesses)."
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:33
msgid "How is the call price calculated?"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:35
msgid ""
"As mentioned above the call price of a margin position depends on the MCR"
" and the amount of debt and collateral in your position. It is "
"independent of the price feed (settlement price). As an example, say you "
"have opened the following position:"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:40
#: ../../source/user/dex-margin-mechanics.rst:69
#: ../../source/user/dex-margin-mechanics.rst:79
#: ../../source/user/dex-margin-mechanics.rst:131
#: ../../source/user/dex-margin-mechanics.rst:159
msgid "Debt: ``10 USD``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:41
msgid "Collateral: ``10000 BTS``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:42
msgid "MCR is ``1.75``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:44
msgid ""
"The call price of your position is  ``10000 BTS / (10 * 1.75 USD) =  "
"571.429 BTS/USD``."
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:47
msgid "How is the collateral ratio (CR) calculated?"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:49
msgid ""
"The collateral ratio depends on the feed price (settlement price). Taking"
" a feed price of ``300 BTS/USD`` and building on the above example with "
"``10 USD`` debt and ``10000 BTS`` collateral:"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:53
msgid "CR: ``(10000 BTS / 300 BTS/USD) / 10 USD = 3.33``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:56
msgid "Execution Conditions"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:59
msgid "When will a margin call happen?"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:61
msgid ""
"This is where it gets complicated. Margin Call are only possible if the "
"feed price is below your call price. A margin call will happen whenever "
"the squeeze protection price goes above the call price of your position. "
"To better understand how this works, let's go back to our margin position"
" and look at collateral ratios:"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:67
msgid "Say we have the following:"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:70
#: ../../source/user/dex-margin-mechanics.rst:99
#: ../../source/user/dex-margin-mechanics.rst:111
#: ../../source/user/dex-margin-mechanics.rst:156
msgid "Settlement price: ``300 BTS/USD``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:71
msgid "CR: ``1``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:72
msgid "Collateral is therefore ``3000 BTS``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:74
msgid ""
"This is also known as the Black Swan level, and we want to perform a "
"margin call before the collateral ratio goes this low. This is why we "
"have the Maintenance Collateral Ratio (MCR), to enforce a buffer zone "
"before a position goes into Black Swan territory. So if we apply the MCR "
"of ``1.75`` to this position:"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:80
#: ../../source/user/dex-margin-mechanics.rst:128
msgid "Settlement Price: ``300 BTS/USD``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:81
msgid "CR: ``1.75``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:82
msgid "Collateral is therefore ``3000 BTS * 1.75 = 5250 BTS``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:84
msgid ""
"This is much safer, there is a bit of margin for the position to be "
"closed before going into Black Swan levels. Since in our example, the USD"
" **requires** ``1.75`` ratio, the call price of this position is now "
"exactly equal to the feed price of ``300 BTS/USD``."
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:89
msgid "Call price: ``5250 / (10 * 1.75) = 300 BTS/USD``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:91
msgid ""
"The remaining question then is, at what point should we force the "
"position to attempt to close itself? This is where the SQPR comes in. "
"Let's look at two scenarios, SQPR of ``1.1`` and SQPR of ``1.5``:"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:97
msgid "** SQPR of ``1.1`` **"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:100
#: ../../source/user/dex-margin-mechanics.rst:130
msgid "SQPR: ``1.1``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:101
msgid "Squeeze Protection Price (SQPP): ``330 BTS/USD``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:103
msgid ""
"In this case, any margin position that has a call price below ``330 "
"BTS/USD`` will be forced to settle, and therefore be added to the "
"orderbook as an order to buy USD for BTS."
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:109
msgid "** SQPR of ``1.5`` **"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:112
msgid "SQPR: ``1.5``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:113
msgid "Squeeze Protection Price (SQPP): ``450 BTS/USD``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:115
msgid ""
"In this case, any margin position that has a call price below ``450 "
"BTS/USD`` will be forced to settle, and therefore be added to the "
"orderbook as an order to buy USD for BTS."
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:119
msgid ":html:`</div></div></div>`"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:122
#: ../../source/user/dex-short.rst:77
msgid "Discussion"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:124
msgid ""
"Another way of looking at this is by looking at the Collateral Ratio of "
"the position. If we want to stay at or above the squeeze protection "
"price, what is the required collateral ratio? Let's do the math:"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:129
#: ../../source/user/dex-margin-mechanics.rst:154
msgid "MCR: ``1.75``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:133
msgid "Call price: ``CP = SQPP = 300 * 1.1 = 330 BTS/USD``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:134
msgid "Collateral = ``(10 USD * 1.75) * 330 BTS/USD  = 5775 BTS``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:136
msgid ""
"The collateral ratio of this position is ``(5775 BTS / 300 BTS/USD) / 10 "
"USD = 1.925``."
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:138
msgid "This is equivalent to the MCR"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:140
msgid "SQPR: ``1.75 * 1.1 = 1.925``."
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:142
msgid ""
"In other words, in order to stay **safe** and not be margin called, the "
"margin position must maintain a collateral ratio higher than ``MCR * "
"SQPR``."
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:145
msgid "**Safe position**: ``CR > MCR * SQPR``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:148
msgid "At what price will the margin call execute?"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:150
msgid ""
"This is the part I believe is most misunderstood, so I will use some "
"screenshots of a fictional ``USD:BTS`` market to explain. We will use the"
" following parameters:"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:153
msgid "SQPR: ``1.2``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:155
msgid "SQPR * MCR:  ``2.1``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:157
msgid "Squeeze protection price: ``300 * 1.2 = 360 BTS/USD``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:160
msgid "Collateral: ``5687.5``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:161
msgid "CR: ``1.896``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:162
msgid "Call price: ``325 BTS/USD``"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:164
msgid ""
"From what we've seen above, it's clear that this position should be "
"margin called: it has a CR of ``1.896`` which is well below the safe "
"ratio of 2.1."
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:167
msgid ""
"It will therefore get added to the order book as a bid to buy USD like "
"this:"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:174
msgid ""
"The margin called order will buy any USD priced in the range ``325-360 "
"BTS/USD``. The squeeze protection price acts as a price ceiling, meaning "
"the forced margin order will not execute at a very high price in an "
"illiquid market: it is protected from high prices by the SQPR."
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:180
msgid "Margin calls only execute in the range [Call Price - SQPP]"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:182
msgid ""
"A margin call will occur any time the lowest ask is higher than the call "
"price and lower than the SQPP. This has several consequences, as we will "
"see below. It can create some very strange situations, and also force the"
" margin called orders to \"buy high\"."
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:187
msgid ""
"**Consequence #1**: Asks below the call price prevent margin calls from "
"executing"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:189
msgid ""
"Because margin calls only execute in the range Call Price - SQPP, if "
"there is a sell order for ``5 USD`` at ``315 BTS/USD`` in this market, "
"the call order will not use it, which makes the market look like this:"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:198
msgid ""
"If a second sell order of ``2.5 USD`` were added at ``345 BTS/USD``, the "
"margin called order would still not buy any USD because of the "
"\"blocking\" sell order at ``315 BTS/USD``:"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:207
msgid ""
"If the order at ``315 BTS/USD`` were to be removed, either from being "
"cancelled or from being filled, the order at ``345 BTS/USD`` would "
"instantly get filled by the margin called order, and the margin called "
"position would have a reduced debt of ``10 - 2.5 = 7.5 USD``:"
msgstr ""

#: ../../source/user/dex-margin-mechanics.rst:217
msgid ""
"**Consequence #2**: Margin calls cannot \"buy cheap\" As we've seen "
"above, unless the settlement price goes above the call price of the "
"position, forced margin calls always buy at a premium relative to the "
"settlement price. Even if there are sell orders available at or near the "
"feed price, the margin called orders will not be matched with those sell "
"orders if their call price is higher than the price of those sell orders."
msgstr ""

#: ../../source/user/dex-short.rst:3
msgid "Short Selling BitAssets"
msgstr ""

#: ../../source/user/dex-short.rst:5
msgid ""
"In order to increase your exposure to BTS and offer liquidity to "
"BitAssets, such as USD, EUR, GOLD, etc., you can go *borrow* this "
"bitAsset from the network and *sell it short*. We will here briefly "
"describe the procedure."
msgstr ""

#: ../../source/user/dex-short.rst:10
msgid "Borrowing"
msgstr ""

#: ../../source/user/dex-short.rst:12
msgid ""
"The BitShares network is capable of issuing any amount of any BitAsset "
"and lend it out to participants given enough collateral."
msgstr ""

#: ../../source/user/dex-short.rst:15
msgid ""
"*settlement price*: The price for 1 BTS as it is traded on external "
"exchanges."
msgstr ""

#: ../../source/user/dex-short.rst:16
msgid ""
"*maintenance collateral ratio* (MCR): A ratio defined by the witnesses as"
" minimum required collateral ratio"
msgstr ""

#: ../../source/user/dex-short.rst:17
msgid ""
"*maximum short squeeze ratio* (MSQR): A ratio defined by the witnesses as"
" to how far shorts are protected against short squeezes"
msgstr ""

#: ../../source/user/dex-short.rst:18
msgid ""
"*short squeeze protection* (SQP): Defines the most that a margin position"
" will ever be forced to pay to cover"
msgstr ""

#: ../../source/user/dex-short.rst:19
msgid ""
"*call price* (CP): The price at which short/borrow positions are margin "
"called"
msgstr ""

#: ../../source/user/dex-short.rst:22
msgid "Margin Call"
msgstr ""

#: ../../source/user/dex-short.rst:24
msgid ""
"The BitShares network is capable of margin calling those positions that "
"do not have enough collateral to back their borrowed bitAssets. A margin "
"call will occur any time the highest bid is less than the *call price* "
"and greater than *SQP*. The margin position will be forced to sell its "
"collateral anytime the highest offer to buy the collateral is less than "
"the call price (x/BTS).::"
msgstr ""

#: ../../source/user/dex-short.rst:34
msgid ""
"The margin call will take the collateral, buy shares of borrowed bitAsset"
" at market rates up to the SQP and close the position. The remaining BTS "
"of the collateral are returned to the customer."
msgstr ""

#: ../../source/user/dex-short.rst:38 ../../source/user/mpa.rst:102
msgid ""
"Read more about the :doc:`margin call mechanics <dex-margin-mechanics>` "
"before trading."
msgstr ""

#: ../../source/user/dex-short.rst:42
msgid "Settlement"
msgstr ""

#: ../../source/user/dex-short.rst:44
msgid ""
"Holders of any bitAsset can request a settlement at a *fair price* at any"
" time. The settlement closes the borrow/short positions with lowest "
"collateral ratio and sells the collateral for the settlement."
msgstr ""

#: ../../source/user/dex-short.rst:48
msgid ""
"Note, that there is a maximum daily settlement volume (currently 2%) "
"defined by the :doc:`committee <committee>` to prevent exploitation via "
"external price movements."
msgstr ""

#: ../../source/user/dex-short.rst:53
msgid "Selling"
msgstr ""

#: ../../source/user/dex-short.rst:55
msgid ""
"After burrowing bitAssets, they can be sold free at any of the "
"corresponding markets at any price a buyer is willing to pay. With this "
"step, the short-selling is now complete and you are short that particular"
" bitAsset."
msgstr ""

#: ../../source/user/dex-short.rst:60
msgid "Updating Collateral Ratio"
msgstr ""

#: ../../source/user/dex-short.rst:62
msgid ""
"At any time, the holder of a borrow/short position can modify the "
"collateral ratio in order to flexibly adjust to market behavior. If the "
"collateral ratio is increase, an additional amount of BTS is locked as "
"collateral, while reducing the collateral ratio will require an amount of"
" the corresponding BitAsset to be payed back to the network."
msgstr ""

#: ../../source/user/dex-short.rst:69
msgid "Covering"
msgstr ""

#: ../../source/user/dex-short.rst:71
msgid ""
"To close a borrow/short position, one must hold the borrowed amount of "
"that particular bitAsset to hand it over to the BitShares network. After "
"that, the BitAssets are reduced from the corresponding supply and the "
"collateral is released and given back to its owner."
msgstr ""

#: ../../source/user/dex-short.rst:79
#, python-format
msgid ""
"Shorts can pick their place in line for settlement. Think of it this way,"
" if you fall in the bottom 2% of shorters by collateral you have been "
"given notice of potential margin call since only 2% can be settled, "
"daily. This is like any other market where they give you 24 hours to add "
"collateral. If someone is short and doesn't want to meet the new higher "
"collateral limits then they can either cover on their own terms or add "
"collateral."
msgstr ""

#: ../../source/user/dex-short.rst:86
msgid ""
"By giving 24 hours shorts have an opportunity to cover prior to any price"
" manipulation by big players."
msgstr ""

#: ../../source/user/dex-short.rst:89
msgid ""
"If there is a 10% premium on BitUSD relative to the feed, then the "
"attacker would have to increase reported price feed (value of BTS) by 10%"
" just to get the force-settlement price to equal the previously fair "
"value for BitUSD. They would have to push beyond 10% before the short "
"starts taking a loss relative to a voluntary cover. All savvy market "
"participants would be aware of a large force-settle order and would "
"therefore reset the manipulator making it much harder to manipulate the "
"price. In effect, price manipulation represents \"free money\" to those "
"who know it is going on."
msgstr ""

#: ../../source/user/dex-short.rst:98
msgid ""
"Look at it another way, someone enters a large force-settlement order it "
"becomes an opportunity for the shorter to do reverse manipulation. It is "
"a tug of war where both sides (short and long) have equal opportunity to "
"manipulate the market in their favor. They go to battle and the result is"
" just the fair market price at that point in time. It is not a guaranteed"
" win for the potential manipulator."
msgstr ""

#: ../../source/user/dex-trading.rst:3 ../../source/user/dex-trading.rst:77
msgid "Trading"
msgstr ""

#: ../../source/user/dex-trading.rst:5
msgid ""
"This page will give a very quick introduction on how to interpret the "
"terms used by the DEX and how trading pairs are presented."
msgstr ""

#: ../../source/user/dex-trading.rst:9
msgid "Pairs"
msgstr ""

#: ../../source/user/dex-trading.rst:11
msgid ""
"In BitShares, almost any asset can be traded with all other assets. Once "
"we have picked two assets, we usually refer to a *market pair*. For "
"instance, we can trade USD against EUR in the USD:EUR pair."
msgstr ""

#: ../../source/user/dex-trading.rst:15
msgid ""
"For sake of consistency, we will use the generalized terms *base* and "
"*quote* such that pairs are represented as::"
msgstr ""

#: ../../source/user/dex-trading.rst:20
msgid ""
"and for instance with *base* being USD and *quote* being EUR, denote the "
"EUR:USD pair."
msgstr ""

#: ../../source/user/dex-trading.rst:24
msgid "Market Overview"
msgstr ""

#: ../../source/user/dex-trading.rst:26
msgid ""
"The market overview that can be access via the explorer, shows a set of "
"predefined default markets. Note that the list of default markets may "
"vary depending on the wallet provider. Further markets can be added using"
" the *Find Markets* tab. Adding a *Star* to your favorite markets will "
"make it appear in your list of default markets."
msgstr ""

#: ../../source/user/dex-trading.rst:38
msgid "Market"
msgstr ""

#: ../../source/user/dex-trading.rst:40
msgid "When entering a market, you will presented with either the market depth"
msgstr ""

#: ../../source/user/dex-trading.rst:47
msgid "... or the price chart depending on your settings."
msgstr ""

#: ../../source/user/dex-trading.rst:54
msgid ""
"You can switch between your views by pressing the corresponding button as"
" highlighted below."
msgstr ""

#: ../../source/user/dex-trading.rst:58
msgid "Order Books"
msgstr ""

#: ../../source/user/dex-trading.rst:60
msgid ""
"The order book consists of an *ask* and a *bid* side. Since trading pairs"
" do not have a preferred orientation, and can be flipped, the following "
"table shall give an overview of ask/bid and the corresponding buy/sell "
"operations for each side:"
msgstr ""

#: ../../source/user/dex-trading.rst:65
msgid "Side"
msgstr ""

#: ../../source/user/dex-trading.rst:65
msgid "Sell"
msgstr ""

#: ../../source/user/dex-trading.rst:65
msgid "Buy"
msgstr ""

#: ../../source/user/dex-trading.rst:67
msgid "Ask"
msgstr ""

#: ../../source/user/dex-trading.rst:67 ../../source/user/dex-trading.rst:69
msgid "*quote*"
msgstr ""

#: ../../source/user/dex-trading.rst:67 ../../source/user/dex-trading.rst:69
msgid "*base*"
msgstr ""

#: ../../source/user/dex-trading.rst:69
msgid "Bid"
msgstr ""

#: ../../source/user/dex-trading.rst:72
msgid ""
"Obviously, what is on the bid side of the USD:EUR pair will be on the ask"
" side on the EUR:USD pair. Of course prices are internally represented as"
" fractions, and thus results in both pairs being identical."
msgstr ""

#: ../../source/user/dex-trading.rst:79
msgid ""
"To place a trading order, it is required to fill the form on either the "
"*ask* or the *bid* side (respectively, *buy* or *sell* side). You will "
"need to define a *price* and an *amount* to sell/buy. The cost for this "
"order will be calculated automatically. Note that there will be an "
"additional fee required to actually place the order."
msgstr ""

#: ../../source/user/dex-trading.rst:90
msgid ""
"Once the order is filled (i.e. someone sold/bought your offer), your "
"account will be credited by the corresponding asset."
msgstr ""

#: ../../source/user/dex-trading.rst:93
msgid "Unfilled orders can be canceled at any time."
msgstr ""

#: ../../source/user/dex-trading.rst:96
msgid "Order Matching"
msgstr ""

#: ../../source/user/dex-trading.rst:98
msgid ""
"BitShares 2.0 matches orders on a first-come, first-serve basis and gives"
" the buyer the best price possible up to the limit (also known as "
"\"walking the book\"). Rather than charging *unpredictable fees* from "
"market overlap (as has been in the previous network), the network charges"
" a defined fee based upon the size of the order matched and the assets "
"involved. Each asset issuer gets an opportunity to configure their fees."
msgstr ""

#: ../../source/user/dex-trading.rst:105
msgid "Tutorial"
msgstr ""

#: ../../source/user/dex-trading.rst:107
msgid ":doc:`../tutorials/dex-trading.rst`"
msgstr ""

#: ../../source/user/eba.rst:3
msgid "Exchange Backed Assets"
msgstr ""

#: ../../source/user/eba.rst:5
msgid ""
"Exchange Backed Assets represent deposit receipts that are issued by a "
"centralized entity, such as exchanges, banks or other institutes. These "
"can either be interpreted as *I owe you* (IOUs) or certificates for a "
"deposit at that institute."
msgstr ""

#: ../../source/user/eba.rst:10
msgid ""
"From the blockchain perspective, EBA are equivalent to a :doc:`uia` that "
"is created and issued by an exchange, bank or financial institute. Hence,"
" it is their responsibility to credit you with the corresponding "
"blockchain token (the EBA) on deposits."
msgstr ""

#: ../../source/user/eba.rst:16
msgid "Use Case"
msgstr ""

#: ../../source/user/eba.rst:18
msgid ""
"The most common use case would be a centralized exchange that allows "
"their users to deposit crypto currencies in their wallets. These deposits"
" are usually stored in their own database and the customers internal "
"account balance is matched accordingly. These database balances serve as "
"**deposit receipts** but obviously require some trust that the database "
"is properly secured against any kind of attacks."
msgstr ""

#: ../../source/user/eba.rst:25
msgid ""
"Instead of increasing an internal account balance of a user, new shares "
"of an EBA can be issued to the user on deposits. Since EBAs are "
"blockchain tokens, they can be traded on the decentralized exchange "
"similar to any other exchange."
msgstr ""

#: ../../source/user/eba.rst:30
msgid ""
"In order to reclaim his crypto tokens on their native blockchain, the "
"users sends back the EBAs to the institute who then destroy the EBAs and "
"transfer the corresponding asset back to its rightful owner."
msgstr ""

#: ../../source/user/eba.rst:37
msgid ""
"Since EBAs are implemented as UIA, you can read more about the underlying"
" technology on the :doc:`corresponding page <uia>`."
msgstr ""

#: ../../source/user/fba.rst:3
msgid "Fee Backed Asset"
msgstr ""

#: ../../source/user/fba.rst:5
msgid ""
"Existing core features of the BitShares protocol are Market Pegged Assets"
" (MPA) and issuer backed User Issued Assets (UIA). In this proposal, we "
"introduce another type of asset: *Fee Backed Assets (FBA)*."
msgstr ""

#: ../../source/user/fba.rst:9
msgid ""
"Feed backed assets allow to propose and fund *market based* innovation by"
" sharing a cut of future profits generated by this particular innovation "
"with the people that helped fund it. Think of it as a *Kickstarter* for "
"features. Hence, if people can profit from successful features in the "
"form of fees then it can help the BitShares ecosystem to become more "
"adaptable over time as it promotes innovation and can pay for its "
"development."
msgstr ""

#: ../../source/user/fba.rst:16
msgid ""
"If you have any features in mind that require new kind of transaction on "
"the blockchain, you can code that feature and fund it with an FBA."
msgstr ""

#: ../../source/user/fba.rst:19
msgid "Feed Backed Assets have been proposed in `BSIP-0007`_."
msgstr ""

#: ../../source/user/first-steps-users.rst:3
msgid "First Steps for End-Users"
msgstr ""

#: ../../source/user/first-steps-users.rst:5
msgid ""
"This guide gives a quick introduction of how to use BitShares as an end-"
"user."
msgstr ""

#: ../../source/user/first-steps-users.rst:8
msgid "Learn about BitShares"
msgstr ""

#: ../../source/user/first-steps-users.rst:10
msgid ""
"BitShares is different from anything you have experienced yet and as "
"such, a user should know about advantages, risks, and opportunities. As a"
" starter, we highly recommend to read through the :doc:`you-should-know` "
"to get a first impression of what BitShares is and how it is different to"
" existing systems."
msgstr ""

#: ../../source/user/first-steps-users.rst:17
msgid "Choose your Client"
msgstr ""

#: ../../source/user/first-steps-users.rst:19
msgid ""
"Several ways existing to enter the BitShares network that focus on "
"different aspects. To actually interact with the BitShares ecosystem, you"
" can either"
msgstr ""

#: ../../source/user/first-steps-users.rst:23
msgid "`download the Official Light Client <http://bitshares.org/download/>`_"
msgstr ""

#: ../../source/user/first-steps-users.rst:24
msgid "or access the network in the browsers via one of our partners:"
msgstr ""

#: ../../source/user/first-steps-users.rst:28
msgid ""
"All of these solutions have one thing in common: **You have sole control "
"of your accounts and funds** and they are created on your computer "
"(within the light-client or the browser). Hence, you will only be able to"
" access your account on the computer that you have used to register and "
"create your account, unless you export your wallet and import it "
"somewhere else."
msgstr ""

#: ../../source/user/first-steps-users.rst:36
msgid "Accounts, Wallets, Keys: Terminology!"
msgstr ""

#: ../../source/user/first-steps-users.rst:38
msgid ""
"Most clients distinguish between accounts from wallets and all of they "
"use keys to access funds. Let's quickly clarify the terms here:"
msgstr ""

#: ../../source/user/first-steps-users.rst:41
msgid ""
"**Keys**: Keys refer to the cryptography used to secure access to your "
"account and funds. It is of importance to prevent others from gaining "
"access to these. This is why you have to provide a passphrase that is "
"used to store the keys in an encrypted way."
msgstr ""

#: ../../source/user/first-steps-users.rst:45
msgid ""
"**Accounts**: Each user has at least one account that can be used to "
"interact with the blockchain. In the end, this can be seen as a single "
"banking account with an individual balance, transaction history, etc. "
"Since these accounts are registered on the blockchain and are open to the"
" public, we recommend to pick a pseudonym to achieve some privacy. The "
"advantage of using account names is that people can identify you by using"
" a readable and memorable word instead of cryptographic addresses."
msgstr ""

#: ../../source/user/first-steps-users.rst:53
msgid ""
"**Wallet**: Since users can (if they have a lifetime membership) register"
" multiple accounts in parallel, all of them are stored in a single "
"wallet. Hence, a wallet can carry many accounts. Furthermore, users can "
"create multiple wallets to organize their accounts properly."
msgstr ""

#: ../../source/user/first-steps-users.rst:59
msgid "Create an Account"
msgstr ""

#: ../../source/user/first-steps-users.rst:61
msgid ""
"In order to use BitShares, you will need to register an account. All you "
"need to provide is an account name and a password to secure your wallet:"
msgstr ""

#: ../../source/user/first-steps-users.rst:64
msgid ""
"The *identicon* at the top can be used to verify your account name to "
"third parties. It is derived from your account name and gives a second "
"verification factor. And this is how you register your account:"
msgstr ""

#: ../../source/user/first-steps-users.rst:73
msgid ""
"In contrast to any other platform you have ever used: **Creating an "
"account at one of our partners will make your account available at all "
"the other partners as well.**. Hence, your account name can be seen "
"similar to a mail address in such that it is **unique** and every "
"participant in the BitShares network can interact with you independent of"
" the actual partner providing the wallet."
msgstr ""

#: ../../source/user/first-steps-users.rst:80
msgid ""
"After creation of your account, you will see an **Account** link in the "
"top navigation bar to browse to your account."
msgstr ""

#: ../../source/user/first-steps-users.rst:83
msgid ""
"Whether you control an account or not can be seen from the account's "
"overview. If it states **(Your Account)**, you do have the requird keys "
"installed in your wallet to access its funds. Otherwise, you can only "
"view the account but cannot transact from it!"
msgstr ""

#: ../../source/user/first-steps-users.rst:95
msgid "Backup your account"
msgstr ""

#: ../../source/user/first-steps-users.rst:97
msgid ""
"Since you are the only individual that has access to your account and "
"funds, it is **your responsibility** to make a secure backup of your "
"registered account."
msgstr ""

#: ../../source/user/first-steps-users.rst:100
msgid ""
"Once you have registered your account, you can click the warning in the "
"footer to directly enter the backup page of your wallet:"
msgstr ""

#: ../../source/user/first-steps-users.rst:103
msgid "Click the *Backup required* link in the footer"
msgstr ""

#: ../../source/user/first-steps-users.rst:110
msgid "Click **Create Backup**"
msgstr ""

#: ../../source/user/first-steps-users.rst:111
msgid ""
"Click **Download** and store the file **safely**. Make sure to **remember"
" the passphrase** you provided when you created your wallet (above) as "
"the downloaded file is encrypted with it."
msgstr ""

#: ../../source/user/first-steps-users.rst:115
msgid ""
"*(optionally but recommended)* Note the ``xxxxxx * SHA1`` checksum to "
"verify the backup"
msgstr ""

#: ../../source/user/first-steps-users.rst:118
msgid "Fund your account"
msgstr ""

#: ../../source/user/first-steps-users.rst:120
msgid "In order to fund your account you have two options:"
msgstr ""

#: ../../source/user/first-steps-users.rst:122
msgid ""
"**Transfers**: Ask a partner or exchange to send funds to you. To do so, "
"you will only need to **provide them with your account name**."
msgstr ""

#: ../../source/user/first-steps-users.rst:124
msgid ""
"**Deposits**: By visiting your **deposit/withdraw** page in your "
"account's navigation, you can use one of our partners to move over "
"existing funds into your BitShares account."
msgstr ""

#: ../../source/user/first-steps-users.rst:128
msgid ""
"In order to understand the meanings of different assets, we recommend you"
" to read through our :doc:`assets page <assets>`."
msgstr ""

#: ../../source/user/first-steps-users.rst:132
msgid "Commonly used Features"
msgstr ""

#: ../../source/user/first-steps-users.rst:135
msgid "Moving Funds"
msgstr ""

#: ../../source/user/first-steps-users.rst:137
msgid ""
"Using the *transfer* tool available from the main menu bar allows to move"
" funds from your account to an arbitrary other account. If you enter the "
"transfer page, your account name will be pre-filled into the source "
"field. You will need to provide the **recipient's account name**, the "
"amount and asset to transfer and can optionally add a memo to help the "
"recipient to identify your transfer (the memo is encrypted and only you "
"and the recipient can read it)."
msgstr ""

#: ../../source/user/first-steps-users.rst:149
msgid ""
"On the BitShares blockchain, people never need to deal with *addresses* "
"or *public keys* but can instead use account names. Your account name "
"becomes the *email address* for your funds."
msgstr ""

#: ../../source/user/first-steps-users.rst:155
msgid "Trading in the Decentralized Exchange (DEX)"
msgstr ""

#: ../../source/user/first-steps-users.rst:157
msgid ""
"To trade your assets into other assets you can use the built-in "
"decentralized exchange (often referred to as *the DEX*). It is available "
"using the **Trade** menu item and shows a list of commonly used markets."
msgstr ""

#: ../../source/user/first-steps-users.rst:166
msgid ""
"By clicking any of the rows, you enter a particular market in which you "
"can participate by selling or buying from the market or by placing a "
"orders into the order books at **your** price."
msgstr ""

#: ../../source/user/first-steps-users.rst:175
msgid ""
"Once an order is filled, the corresponding asset will appear in your "
"balance immediately. In BitShares, clearing and settlement are performed "
"instantaneously."
msgstr ""

#: ../../source/user/first-steps-users.rst:184
msgid "Read more:"
msgstr ""

#: ../../source/user/first-steps-users.rst:186
msgid ":doc:`dex`"
msgstr ""

#: ../../source/user/first-steps-users.rst:187
msgid ":doc:`dex-trading`"
msgstr ""

#: ../../source/user/first-steps-users.rst:190
msgid "Exploring the Blockchain"
msgstr ""

#: ../../source/user/first-steps-users.rst:192
msgid ""
"The blockchain and business can be investigated using the built-in "
"explorer from the main navigation bar. There you can take a closer look "
"at:"
msgstr ""

#: ../../source/user/first-steps-users.rst:195
msgid "the blockchain,"
msgstr ""

#: ../../source/user/first-steps-users.rst:196
msgid "the available assets,"
msgstr ""

#: ../../source/user/first-steps-users.rst:197
msgid "registered accounts,"
msgstr ""

#: ../../source/user/first-steps-users.rst:198
msgid "witnesses,"
msgstr ""

#: ../../source/user/first-steps-users.rst:199
msgid "committee members,"
msgstr ""

#: ../../source/user/first-steps-users.rst:200
msgid "markets, and"
msgstr ""

#: ../../source/user/first-steps-users.rst:201
msgid "the fee schedule."
msgstr ""

#: ../../source/user/governance.rst:3
msgid "Blockchain Governance"
msgstr ""

#: ../../source/user/governance.rst:5
msgid ""
"The blockchain can and needs to be governed by **elected** individuals "
"and businesses. The so called *committee* (a set of many individuals), "
"can change blockchain parameters such as block size, block confirmation "
"time and others. Most importantly, though, they deal with the business "
"plan of the blockchain and tweak costs and revenue streams (mainly "
"transaction fees). In contrast to most existing crypto currencies, we are"
" not hoping for a fee market to grow but instead have the committee "
"members deal with fine-tuning of the business plan. Fortunately, the "
"shareholders have the final say to approve the executive committee."
msgstr ""

#: ../../source/user/governance.rst:15
msgid ""
"Hence, we see businesses competing for seats in the committee to define "
"blockchain parameters."
msgstr ""

#: ../../source/user/governance.rst:18
msgid ""
"If business ideas requires certain blockchain parameters or a particular "
"set of fees to be profitable, there are several options:"
msgstr ""

#: ../../source/user/governance.rst:21
msgid ""
"Argue with shareholders to approve committee members that vote in their "
"favour"
msgstr ""

#: ../../source/user/governance.rst:23
msgid ""
"Get elected as committee member by showing that the business is worth "
"being available in that particular chain"
msgstr ""

#: ../../source/user/governance.rst:25
msgid ""
"Deploy the innovative business idea as a smart contract on the blockchain"
" and have the shareholders approve the upgrade in combination with *Fee "
"Backed Asset* that pays future fees of the smart contract to holders of "
"that asset (:doc:`fba`)"
msgstr ""

#: ../../source/user/index.rst:3
msgid "User Guide"
msgstr ""

#: ../../source/user/index.rst:6
msgid "For End User"
msgstr ""

#: ../../source/user/index.rst:8
msgid ""
"We would like to introduce most features to the user in a friendly and "
"easy to understand way in this *User Guide*. Note, that the blockchain "
"itself is capable of many more things that are not (yet) exposed to the "
"end-user. In the future, we expect to see many more customized wallets "
"that expose different features to their users."
msgstr ""

#: ../../source/user/index.rst:31
msgid "For Blockchain \"Employees\""
msgstr ""

#: ../../source/user/index.rst:33
msgid ""
"BitShares 2 separates responsibilities and incentives activities that are"
" beneficial to the network, thus acknowledging different skill sets and "
"interested community members to have incentives to contribute in the most"
" appropriate way."
msgstr ""

#: ../../source/user/index.rst:38
msgid "Witnesses are paid for maintaining the back-bone of the network."
msgstr ""

#: ../../source/user/index.rst:39
msgid ""
"Committee members are unpaid volunteers that organize the community and "
"propose changes to the network."
msgstr ""

#: ../../source/user/index.rst:40
msgid "Marketers are paid in referral fees."
msgstr ""

#: ../../source/user/index.rst:41
msgid "Workers are paid for whatever they propose and do."
msgstr ""

#: ../../source/user/index.rst:42
msgid ""
"Shareholders are people holding BTS. They can cast a vote and influence "
"the DAC's businesses"
msgstr ""

#: ../../source/user/index.rst:44
msgid ""
"Each of the above (except Marketers) requires users to vote for the "
"people, proposals, and/or changes. Those with sufficient approval will be"
" compensated."
msgstr ""

#: ../../source/user/index.rst:47
msgid ""
"Workers are the \"catch all\" group where if you have an idea for "
"something that could improve the network, you can get \"paid\" by the "
"network to do it. Organizing meet-ups, developing a new tool or feature "
"for the community, and maintaining websites and infrastructure (e.g. the "
"mumble server team or linux distribution) are all examples of things "
"workers may do."
msgstr ""

#: ../../source/user/marketer.rst:3
msgid "Marketer"
msgstr ""

#: ../../source/user/mpa.rst:5
msgid ""
"A crypto-currency, with the properties and advantages of Bitcoin, that is"
" capable of maintaining price parity with a globally adopted currency "
"(e.g. U.S.  dollar), has high utility for convenient and censorship "
"resistant commerce. This can be achieved by BitShares' market pegged "
"assets (MPA), a new type of freely traded digital asset whose value is "
"meant to track the value of a conventional underlying asset by means of "
"contracts for difference (CFD)."
msgstr ""

#: ../../source/user/mpa.rst:13
msgid ""
"Instead of creating a UIA where the full control over supply is in the "
"hands of the issuer, we can also create a **Market Pegged Asset** (MPA) "
"and let the market deal with demand and supply. All we need is a *fair "
"price* and another asset that can be used as collateral."
msgstr ""

#: ../../source/user/mpa.rst:18
msgid ""
"Why would we need *collateral* for? Since the issuer of a MPA has no "
"control over the supply, the blockchain protocol deals with increasing "
"and decreasing supply. In order for a user to get some of the new coins, "
"he will need to put collateral into a **smart contract** (technically, "
"this contract is a *contract for difference*)."
msgstr ""

#: ../../source/user/mpa.rst
msgid ""
"A simple example would be a MPA that is backed by USD (a stable crypto "
"token within BitShares) that requires a collateral ratio of 200%. Then, "
"in order to get new coin, we can borrow 100 USD worth of new coins by "
"paying 200 USD."
msgstr ""

#: ../../source/user/mpa.rst:29
msgid ""
"By this, the supply of your coin is increased by 100. But how would it be"
" decreased? The USD are locked in the smart contract and can only be "
"reclaimed if the debt (here, 100 coins) are returned. Returning them will"
" result in the coins being removed from the supply because the are no "
"longer backed by any collateral."
msgstr ""

#: ../../source/user/mpa.rst:35
msgid ""
"So what for do we need a *fair price*? Remember that we chose a "
"collateral ratio of 200%? That number tells us how well *backed* your "
"coins are by the collateral. But what would happen if the value of your "
"coin goes to the moon?  Then your collateral ratio will reduce to say "
"150%. At a certain percentage, the blockchain will automatically trigger "
"so called *Margin Calls* which will"
msgstr ""

#: ../../source/user/mpa.rst:42
msgid "Take your collateral (here, USD)"
msgstr ""

#: ../../source/user/mpa.rst:43
msgid "Sell it in the market to buy back the coin you owe"
msgstr ""

#: ../../source/user/mpa.rst:44
msgid "Close the contract"
msgstr ""

#: ../../source/user/mpa.rst:45
msgid "Pay your the residual USD"
msgstr ""

#: ../../source/user/mpa.rst:47
msgid ""
"A *fair price* thus tells the market what your coin is worth (e.g. traded"
" for on external exchanges) and triggers margin calls if necessary."
msgstr ""

#: ../../source/user/mpa.rst:51
msgid ""
"But there is more! Everyone that holds your (MPA) coin in BitShares can "
"convert the coin into the backing asset at a fair price. This procedure "
"is called \"settlement\" and ensures that your MPA is always worth **at "
"least** the *fair price*."
msgstr ""

#: ../../source/user/mpa.rst:56
msgid ""
"In the User Interface, MPAs are easily distinguishable from UIAs in the "
"asset explorer."
msgstr ""

#: ../../source/user/mpa.rst:60
msgid "SmartCoins"
msgstr ""

#: ../../source/user/mpa.rst:62
msgid ""
"BitAssets can be created and owned by anyone on the network. However, "
"those that are owned by the BitShares Committee, are called *SmartCoins*."
" Among these are:"
msgstr ""

#: ../../source/user/mpa.rst:66
msgid "(Bit)USD"
msgstr ""

#: ../../source/user/mpa.rst:67
msgid "(Bit)CNY"
msgstr ""

#: ../../source/user/mpa.rst:68
msgid "(Bit)EUR"
msgstr ""

#: ../../source/user/mpa.rst:69
msgid "(Bit)GOLD"
msgstr ""

#: ../../source/user/mpa.rst:70
msgid "(Bit)Silver"
msgstr ""

#: ../../source/user/mpa.rst:72
msgid ""
"Balances in these assets are labeled with `USD`, `CNY`, etc., because "
"represent the same value as their underly."
msgstr ""

#: ../../source/user/mpa.rst:76
msgid "Collateralized Tokens"
msgstr ""

#: ../../source/user/mpa.rst:78
#, python-format
msgid ""
"A *SmartCoin* (synonym for MPA) is a crypto-currency that *always* has "
"100% or more of its value backed by the BitShares core currency (BTS), to"
" which they can be converted at any time, as *collateral* in a CFD."
msgstr ""

#: ../../source/user/mpa.rst:82
msgid ""
"What makes MPAs unique is that they are free from counterparty risk even "
"though they resemble a CFD backed by collateral. This is achievable by "
"letting the network itself (implemented as a software protocol) be "
"responsible for securing the collateral and performing settlements as "
"will be described in more detail below."
msgstr ""

#: ../../source/user/mpa.rst:89
msgid "Market Mechanics"
msgstr ""

#: ../../source/user/mpa.rst:91
msgid ""
"Each BitAsset has a feed that is provided by the witnesses that indicate "
"a fair price for that asset. This so called *Settlement Price* or *Feed "
"Price* is used to margin call positions that borrowed BitAssets and can "
"no longer maintain the minimum collateral ratio (i.e. maintenance "
"collateral ratio). The collateral of these positions is used to buy back "
"the debt from the market automatically and the position will be closed. "
"By these rules, the network enforces the exchange participants to always "
"maintain a collateral that is higher than the minimum requirement. "
"Currently, the minimum required collateral ratio is **175%** and can be "
"changed by the witnesses."
msgstr ""

#: ../../source/user/pm.rst:3
msgid "Prediction Markets"
msgstr ""

#: ../../source/user/pm.rst:5
msgid ""
"A prediction market is a specialized BitAsset such that total debt and "
"total collateral are always equal amounts (although asset IDs differ). No"
" margin calls or force settlements may be performed on a prediction "
"market asset. A prediction market is globally settled by the issuer after"
" the event being predicted resolves, thus a prediction market must always"
" have the `global_settle` permission enabled. The maximum price for "
"global settlement or short sale of a prediction market asset is 1-to-1."
msgstr ""

#: ../../source/user/pm.rst:13
msgid ""
"In the following, we denote a *positive outcome* as a predication market "
"that resolves to `true` (i.e. a price feed of `1`) and a *negative "
"outcome* to resolve to `false` (i.e. a price feed of `0`)"
msgstr ""

#: ../../source/user/pm.rst:18
msgid ""
"If the bet resolves to `true` (i.e. a price feed of `1`), then the PM-"
"asset can be settled release the collateral to the holder of the asset."
msgstr ""

#: ../../source/user/pm.rst:22
msgid ""
"If, instead, the bet resolves to `false` (i.e. a price feed of `0`), then"
" those that sold the PM-asset on the market and went short, made a profit"
" since it PM-asset became worthless."
msgstr ""

#: ../../source/user/pm.rst:27
msgid "Creation"
msgstr ""

#: ../../source/user/pm.rst:29
msgid ""
"Prediction markets are assets that trade freely and can be borrowed from "
"the market at a 1:1 ratio with the backing asset (which could be any "
"other asset, including BTS, USD, GOLD)."
msgstr ""

#: ../../source/user/pm.rst:33
msgid "The technical details are described in a separate tutorial:"
msgstr ""

#: ../../source/user/pm.rst:35
msgid ":doc:`../tutorials/pm-create-manual`"
msgstr ""

#: ../../source/user/pm.rst:38
msgid "Betting"
msgstr ""

#: ../../source/user/pm.rst:40
msgid ""
"A user can take either bet on a positive outcome, or a negative outcome. "
"We here show how this works, technically."
msgstr ""

#: ../../source/user/pm.rst:44
msgid "Betting for a Positive Outcome"
msgstr ""

#: ../../source/user/pm.rst:46
msgid ""
"If you are confident that the bet will resolve positive, you want to "
"**hold** that particular PM-asset since it allows you to settle it for "
"it's collateral on a 1:1 basis."
msgstr ""

#: ../../source/user/pm.rst:50
msgid ""
"In order to get hold of those tokens, you can put a buy order for them at"
" any price (between 0 and 1) and wait for it to be filled, or buy at "
"market rates. By this technique, a user can pre define at which odds to "
"buy shares."
msgstr ""

#: ../../source/user/pm.rst:55
msgid ""
"For instance, if you think that the bet resolves positively at a "
"probability of `80%`, you can put your buy order at a price of `0.8`. If "
"the bet resolves positively (price feed of `1`), then you can settle your"
" shares at `1` and make a 20% profit."
msgstr ""

#: ../../source/user/pm.rst:60
msgid ""
"If you can buy tokens at a price of `0.2` (i.e. market participants think"
" it is unlikely to resolve positively), then you could make `80%` profits"
" at a risk of loosing with `80%` probability."
msgstr ""

#: ../../source/user/pm.rst:64
msgid ""
"After closing of the bet, a user can claim his profits by **settling** "
"his borrow position and taking out the collateral:"
msgstr ""

#: ../../source/user/pm.rst:67
msgid "**Settlement in the CLI wallet**: ::"
msgstr ""

#: ../../source/user/pm.rst:72
msgid ""
"**Borrowing in the GUI wallet**: A settlement button is available when "
"hovering the asset in your account's overview."
msgstr ""

#: ../../source/user/pm.rst:77
msgid "Betting for a Negative Outcome"
msgstr ""

#: ../../source/user/pm.rst:79
msgid ""
"In order to bet for a negative outcome (bet resolves to `false` with a "
"price feed of `0`), you need to **sell** the tokens. In order to get "
"them, you should **not** buy them at the market, but instead **borrow** "
"them from the network by paying collateral at a 1:1 ratio."
msgstr ""

#: ../../source/user/pm.rst:84
msgid ""
"For example, in the `PM.PRESIDENT2016` if you want to bet on a negative "
"outcome with `100k BTS`, you can borrow `100k PM.PRESIDENT2016` by paying"
" `100k BTS` to the network."
msgstr ""

#: ../../source/user/pm.rst:88
msgid ""
"Since PM-Assets can technically be pegged by any other asset, you may "
"need to pay USD (or anything else) instead of BTS."
msgstr ""

#: ../../source/user/pm.rst:91
msgid ""
"Once you borrowed the token, you can sell them at any price between `0` "
"and `1`. If you thing the probability of a negative outcome is `20%`, you"
" should consider selling your tokens at `0.2`."
msgstr ""

#: ../../source/user/pm.rst:95
msgid ""
"If the bet resolves negatively (price feed of `0`), your debts is worth "
"`debt = amount * price = 0 BTS`, you can reclaim your collateral at zero "
"cost, and get to keep `20%` profits from selling the token at `0.2`. If "
"instead the bet resolves positively and you sold all tokens, you cannot "
"close your borrow position to redeem your collateral. However, your total"
" loss is reduced by `20%` for selling the tokens at the market."
msgstr ""

#: ../../source/user/pm.rst:102
msgid ""
"If, by the end of the bet, you still have some of the tokens left, you "
"can of course close your borrow position partly and redeem the "
"corresponding percentage of the collateral."
msgstr ""

#: ../../source/user/pm.rst:106
msgid "**Borrowing in the CLI wallet**: ::"
msgstr ""

#: ../../source/user/pm.rst:111
msgid ""
"**Borrowing in the GUI wallet**: Of course, the asset can also be "
"borrowed in the **GUI/web wallet** by using the `Borrow x` button in the "
"market."
msgstr ""

#: ../../source/user/pm.rst:121
msgid "Resolving"
msgstr ""

#: ../../source/user/pm.rst:123
msgid ""
"A price feed needs to be published for the prediction market by the "
"issuer or feed producer. It is essentially a global settlement which will"
" set the parameters of the asset such that the holders of the asset can "
"settle at the outcome of the bet (0, or 1). The details are shown in the "
"tutorial:"
msgstr ""

#: ../../source/user/pm.rst:129
msgid ":doc:`../tutorials/pm-close-manual`"
msgstr ""

#: ../../source/user/privbta.rst:3
msgid "Privatized BitAssets"
msgstr ""

#: ../../source/user/privbta.rst:5
msgid ""
"Alternatively to regular MPA like the bitUSD, BitShares also offers "
"entrepreneurs an opportunity to create their own SmartCoins with custom "
"parameters and a distinct set of price feed producers."
msgstr ""

#: ../../source/user/privbta.rst:9
msgid ""
"Privatized SmartCoin managers can experiment with different parameters "
"such as collateral requirements, price feeds, force settlement delays and"
" forced settlement fees. They also earn the trading fees from "
"transactions the issued asset is involved in, and therefore have a "
"financial incentive to market and promote it on the network. The "
"entrepreneur who can discover and market the best set of parameters can "
"earn a significant profit.  The set of parameters that can be tweaked by "
"entrepreneurs is broad enough that SmartCoins can be used to implement a "
"fully functional prediction market with a guaranteed global settlement at"
" a fair price, and no forced settlement before the resolution date."
msgstr ""

#: ../../source/user/privbta.rst:19
msgid ""
"Some entrepreneurs may want to experiment with SmartCoins that always "
"trade at exactly $1.00 rather than strictly more than $1.00. They can do "
"this by manipulating the forced settlement fee continuously such that the"
" average trading price stays at about $1.00. By default, BitShares "
"prefers fees set by the market, and thus opts to let the price float "
"above $1.00, rather than fixing the price by directly manipulating the "
"forced settlement fee."
msgstr ""

#: ../../source/user/privbta.rst:27
msgid "Preparations"
msgstr ""

#: ../../source/user/privbta.rst:29
msgid "First, the reader should familiarize himself with the following articles:"
msgstr ""

#: ../../source/user/privbta.rst:32
msgid ":doc:`assets-faq`"
msgstr ""

#: ../../source/user/privbta.rst:33
msgid ":doc:`../tutorials/uia-create-manual`"
msgstr ""

#: ../../source/user/privbta.rst:34
msgid ":doc:`../tutorials/mpa-create-manual`"
msgstr ""

#: ../../source/user/privbta.rst:37
msgid "Parameters"
msgstr ""

#: ../../source/user/privbta.rst:39
msgid "The relevant and interesting parameters are located in the uia flags:"
msgstr ""

#: ../../source/user/privbta.rst:48
msgid ""
"Setting these two parameters to ``false``, allows to manually define the "
"set of feed producers (see below). Alternatively, setting either of both "
"to ``true`` will give the corresponding entity the responsibility to "
"produce and publish a feed."
msgstr ""

#: ../../source/user/privbta.rst:54
msgid "Changing the Feed producers"
msgstr ""

#: ../../source/user/privbta.rst:56
msgid ""
"The following command replaces the set of currently allowed feed "
"producers by the new set of feed producers:"
msgstr ""

#: ../../source/user/privbta.rst:64
msgid "Producing a Feed"
msgstr ""

#: ../../source/user/privbta.rst:66
msgid ""
"We have a distinct tutorial that describes how feed are can be published:"
" :doc:`../tutorials/publish-feed`."
msgstr ""

#: ../../source/user/recover-from-brainkey.rst:3
msgid "Recover account with brain key"
msgstr ""

#: ../../source/user/recover-from-brainkey.rst:5
msgid ""
"If you have the brain key, then you can reclaim access to your account(s)"
" and its funds by"
msgstr ""

#: ../../source/user/recover-from-brainkey.rst:8
msgid "Open the Settings"
msgstr ""

#: ../../source/user/recover-from-brainkey.rst:9
msgid "Enter the wallet mangement console"
msgstr ""

#: ../../source/user/recover-from-brainkey.rst:10
msgid "Click on \"New wallet\""
msgstr ""

#: ../../source/user/recover-from-brainkey.rst:11
msgid "Click \"Custom Brainkey (advanced)\""
msgstr ""

#: ../../source/user/recover-from-brainkey.rst:12
msgid "Provide a new (or the old) passphrase"
msgstr ""

#: ../../source/user/recover-from-brainkey.rst:13
msgid "provide the brain key"
msgstr ""

#: ../../source/user/recover-from-brainkey.rst:14
msgid "Create the new wallet"
msgstr ""

#: ../../source/user/recover-from-brainkey.rst:16
msgid ""
"Your account should now be accessible from the top navigation bar. If you"
" only have one account, you will see **Account**, else you will see "
"**Dashboard**."
msgstr ""

#: ../../source/user/referral-program.rst:3
msgid "Referal Program"
msgstr ""

#: ../../source/user/referral-program.rst:5
msgid ""
"The purpose of the referral program is to incentivize people to bring in "
"more people. It compares to a Multi-Level-Marketing (MLM) scheme with the"
" difference of having only **1 level** where referred individuals can "
"opt-out by upgrading their account to a :doc:`Life-Time Member (LTM) "
"<account-memberships>`. Every life time member, can get a cut of the fees"
" based on child accounts linked to ours via referral."
msgstr ""

#: ../../source/user/referral-program.rst:12
msgid ""
"BitShares has several different kinds of accounts: * Basic Account, and *"
" Lifetime Member."
msgstr ""

#: ../../source/user/referral-program.rst:16
msgid ""
"**Basic Accounts** are free, but do not qualify for the referral program,"
" nor any cash back on transaction fees."
msgstr ""

#: ../../source/user/referral-program.rst:19
#, python-format
msgid ""
"**Lifetime Members** pay an upgrade fee and earn **80% cash back on every"
" fee they pay**. They also qualify for **80% of the fees paid by Basic "
"Accounts they refer** to the network. These 80% can be split among the "
"registrar, that actually registers the accounts, and an affiliate "
"referrer, that brought in the new user."
msgstr ""

#: ../../source/user/referral-program.rst:25
msgid ""
"In Q1/2016, the *anual membership* has been removed from the code base "
"and no longer exists. References to this kind of memberships can be "
"safely ignored."
msgstr ""

#: ../../source/user/referral-program.rst:29
msgid ""
"The referral fees are controlled by the blockchain and are distributed "
"like this:"
msgstr ""

#: ../../source/user/referral-program.rst:31
#, python-format
msgid "20% go to the network"
msgstr ""

#: ../../source/user/referral-program.rst:32
#, python-format
msgid "80% go to the referral program"
msgstr ""

#: ../../source/user/referral-program.rst:34
#, python-format
msgid "of this 80%, x% go to the registrar"
msgstr ""

#: ../../source/user/referral-program.rst:35
#, python-format
msgid "of this 80%, 100%-x% go to the affiliate referrer"
msgstr ""

#: ../../source/user/referral-program.rst:37
#, python-format
msgid ""
"For many cases it may make sense to upgrade the account even though you "
"don't want to participate in marketing at all simply for the reasons to "
"get a cashback of 80% of the fees you pay for your own transactions!"
msgstr ""

#: ../../source/user/referral-program.rst:43
msgid "What to do?"
msgstr ""

#: ../../source/user/referral-program.rst:45
msgid ""
"If you want to participate in the referral program, you need to have a "
"life-time member account, first! Then you can bring in new users by"
msgstr ""

#: ../../source/user/referral-program.rst:48
#, python-format
msgid ""
"running your own faucet and actually register new accounts (will give you"
" 80% of all the fees of those minus a fraction that you decide to give to"
" affiliates (the referrers)"
msgstr ""

#: ../../source/user/referral-program.rst:51
msgid ""
"referring people to a hosted wallet that offers you a cut of the fees as "
"an affiliate."
msgstr ""

#: ../../source/user/referral-program.rst:54
msgid ""
"In this case, most hosted wallets add your account as affiliate if you "
"provide the following link structure to people"
msgstr ""

#: ../../source/user/referral-program.rst:61
msgid ""
"with ``<your-account>`` being the name of your BitShares Lite-Time Member"
" account."
msgstr ""

#: ../../source/user/referral-program.rst:64
msgid ""
"If you want link to pages with in the wallet, e.g. a particular "
"decentralized market, you need to have the ``?r=`` parameter **before** "
"the ``#``, e.g.::"
msgstr ""

#: ../../source/user/referral-program.rst:73
msgid ""
"When an Basic Account pays $100 to become a Lifetime Member, $50 is paid "
"to their Referrer, $30 is paid to the nearest Lifetime Member, and $20 is"
" paid to the Network. After this point the Lifetime Member becomes its "
"own referrer and nearest Lifetime Member and its prior Referrers no "
"longer get any revenue from this user."
msgstr ""

#: ../../source/user/referral-program.rst:80
msgid "Terms & Conditions"
msgstr ""

#: ../../source/user/referral-program.rst:82
msgid ""
"Please see the `Referral Program - Terms & Conditions "
"<https://bitshares.org/referral-program-terms-and-conditions/>`_ for more"
" details."
msgstr ""

#: ../../source/user/referral-program.rst:87
msgid "Claiming Referral Bonus and Cashback"
msgstr ""

#: ../../source/user/referral-program.rst:89
msgid "If you have a life time member account and"
msgstr ""

#: ../../source/user/referral-program.rst:91
msgid "already paid some fees, or"
msgstr ""

#: ../../source/user/referral-program.rst:92
msgid "have referred people that paid some fees,"
msgstr ""

#: ../../source/user/referral-program.rst:94
msgid "you can withdraw them in the \"Vesting\" tab of your account."
msgstr ""

#: ../../source/user/security.rst:3
msgid "Security"
msgstr ""

#: ../../source/user/security.rst:5
msgid ""
"Since BitShares 2.0 is about financial freedom and securing wealth, we "
"take users concerns about application and network security serious."
msgstr ""

#: ../../source/user/security-brainkey.rst:3
msgid "The Brain Key"
msgstr ""

#: ../../source/user/security-brainkey.rst:5
msgid ""
"The *brain key* is used as source for all cryptographic keys generated in"
" the wallet. If you have it secured, you will be able to regain access to"
" your accounts and funds (unless the access keys have been changed)"
msgstr ""

#: ../../source/user/security-brainkey.rst:10
msgid "Backing Up the Brain Key"
msgstr ""

#: ../../source/user/security-brainkey.rst:12
msgid ""
"The brain key can be backed up as a string using the *Wallet Management "
"Console** in your settings."
msgstr ""

#: ../../source/user/security-brainkey.rst:21
msgid "Restoring from Brain Key"
msgstr ""

#: ../../source/user/security-brainkey.rst:23
msgid ""
"Your wallet can be restored with the brain key from the GUI. When "
"creating a new wallet there is a link at the bottom, ``Existing "
"Accounts``. From there select ``Create Wallet`` and then ``Custom Brain "
"Key (Advanced)`` from the bottom."
msgstr ""

#: ../../source/user/security-cold.rst:3
msgid "Securing \"Cold\" Wallets"
msgstr ""

#: ../../source/user/security-cold.rst:6
msgid "Obtaining A Private Key"
msgstr ""

#: ../../source/user/security-cold.rst:9
msgid "Exporting Existing Private Key"
msgstr ""

#: ../../source/user/security-cold.rst:11
msgid ""
"Existing private keys can be obtained from the ``Permissions`` tab in the"
" wallet."
msgstr ""

#: ../../source/user/security-cold.rst:19
msgid ""
"Note that this approach should not be considered **cold** as the private "
"keys has been installed in the browser first."
msgstr ""

#: ../../source/user/security-cold.rst:23
msgid "Offline Webpage"
msgstr ""

#: ../../source/user/security-cold.rst:25
msgid ""
"Alternatively, you can use a distinct web project that sole purpose is to"
" provide a public, private key pair. It can be downloaded from `github`_ "
"and should be opened in a browser on a non-connected device. The page "
"generated a random private key, derives the corresponding public key and "
"shows it in plain text and as QR code."
msgstr ""

#: ../../source/user/security-cold.rst:31
msgid ""
"Either copy&paste the private key or print the resulting page because the"
" private key cannot be regenerated!"
msgstr ""

#: ../../source/user/security-cold.rst:38
msgid "Updating Account Permissions"
msgstr ""

#: ../../source/user/security-cold.rst:39
msgid ""
"As described in the :doc:`account permissions <account-permissions>` and "
":doc:`security permissions <security-permissions>` in theory, we now have"
" to update the accounts permissions."
msgstr ""

#: ../../source/user/security-cold.rst:43
msgid ""
"To be able to update the accounts permissions we need the **owner key**. "
"Hence, if your owner key is compromised the active key can be updated and"
" you will be locked out of your funds."
msgstr ""

#: ../../source/user/security-cold.rst:47
msgid ""
"Make sure to give it a weight that is higher than the threshold. If you "
"want that key to be the sole key for accessing the funds, remove all "
"other keys from the active permissions tabs."
msgstr ""

#: ../../source/user/security-cold.rst:57
msgid "Importing Keys"
msgstr ""

#: ../../source/user/security-cold.rst:59
msgid ""
"Private keys can be reimported using the wallet management console. Then "
"funds and account features will be available to your wallet again:"
msgstr ""

#: ../../source/user/security-hot.rst:3
msgid "Securing \"Hot\" Wallets"
msgstr ""

#: ../../source/user/security-hot.rst:5
msgid "*Proposed Transactions under construction*"
msgstr ""

#: ../../source/user/security-permissions.rst:3
msgid "Permission Model"
msgstr ""

#: ../../source/user/security-permissions.rst:5
msgid "We distinguish between two kinds of permissions:"
msgstr ""

#: ../../source/user/security-permissions.rst:10
msgid ""
"Both are implemented using `Elliptic Curve Cryptography`_ (ECC) with "
"*public* and *private* keys. :doc:`Read more <account-permissions>`."
msgstr ""

#: ../../source/user/security-permissions.rst:15
msgid "You can find the keys for your permissions in the ``Permissions`` tab:"
msgstr ""

#: ../../source/user/shareholder.rst:3
msgid "Shareholder"
msgstr ""

#: ../../source/user/shareholder.rst:5
msgid ""
"In contrast to most crypto-currencies, BitShares does not claim to be a "
"currency but rather an *equity* in a decentral autonomous company (DAC). "
"As a result, the market valuation of BitShares is free floating and may "
"be as volatile as any other equity (e.g. of traditional companies)."
msgstr ""

#: ../../source/user/shareholder.rst:10
msgid ""
"Every entity hold the core token (BTS) is considered a shareholder of the"
" BitShares decentralized company."
msgstr ""

#: ../../source/user/shareholder.rst:13
msgid ""
"Nonetheless, BTS tokens can be used as *collateral* in financial smart "
"contracts such as market pegged assets and thus back every existing "
"smartcoin such as the bitUSD."
msgstr ""

#: ../../source/user/shareholder.rst:17
msgid "Furthermore, each BTS can be used to cast a vote for"
msgstr ""

#: ../../source/user/shareholder.rst:19
msgid ":doc:`Block Producers <witness>`"
msgstr ""

#: ../../source/user/shareholder.rst:20
msgid ":doc:`Commmittee members <committee>`"
msgstr ""

#: ../../source/user/shareholder.rst:22
msgid "and can thus participate in the corporate governance."
msgstr ""

#: ../../source/user/transactions.rst:3
msgid "Transactions and Operations"
msgstr ""

#: ../../source/user/transactions.rst:5
msgid ""
"BitShares 2.0 implements a variety of operations besides simple transfers"
" of funds. For instance in order to operate the :doc:`decentralized "
"exchange <dex>` we need support for buy, sell orders as well. The "
"technical documentation about all operation types can be found in our "
"`doxygen docs`_."
msgstr ""

#: ../../source/user/transactions-confidential.rst:3
msgid "Confidential Transactions"
msgstr ""

#: ../../source/user/transactions-confidential.rst:5
msgid ""
"A confidential transfer is one that hides the amount being sent. "
"Confidential transfers are also referred to as blinded transfers. It "
"makes use of Oleg Andreev's `blind signatures`_."
msgstr ""

#: ../../source/user/transactions-confidential.rst:9
msgid ""
"When privacy is important no account is ever used twice and it is "
"impossible for any third party to identify how money is moving through "
"blockchain analysis alone."
msgstr ""

#: ../../source/user/transactions-confidential.rst:13
msgid ""
"Confindential transactions are currently only available using the :doc"
":`cli-wallet <../../integration/apps/cliwallet>`. A step-by-step guide "
"can be found in the :doc:`tutorials <../tutorials/confidential-"
"transactions>`"
msgstr ""

#: ../../source/user/transactions-proposed.rst:3
msgid "Proposed Transactions"
msgstr ""

#: ../../source/user/transactions-proposed.rst:5
msgid ""
"The Graphene technology allows users to *propose* a transaction on the "
"blockchain which requires approval of multiple accounts in order to "
"execute."
msgstr ""

#: ../../source/user/transactions-proposed.rst:8
msgid ""
"At any time, a proposal can be approved in a single transaction if "
"sufficient signatures are available (see ``proposal_update_operation`` as"
" constructed by the ``approve_proposal`` call), as long as the authority "
"tree to approve the proposal does not exceed the maximum recursion depth."
" In practice, however, it is easier to use proposals to acquire all "
"approvals, as this leverages on-chain notification of all relevant "
"parties that their approval is required. Off-chain multi-signature "
"approval requires some off-chain mechanism for acquiring several "
"signatures on a single transaction.  This off-chain synchronization can "
"be avoided using proposals."
msgstr ""

#: ../../source/user/transactions-proposed.rst:18
msgid ""
"The user proposes a transaction, then signatory accounts use add or "
"remove their approvals from this operation. When a sufficient number of "
"approvals have been granted, the operations in the proposal are "
"evaluated. Even if the transaction fails, the proposal will be kept until"
" the expiration time, at which point, if sufficient approval is granted, "
"the transaction will be evaluated a final time. This allows transactions "
"which will not execute successfully until a given time to still be "
"executed through the proposal mechanism. The first time the proposed "
"transaction succeeds, the proposal will be regarded as resolved, and all "
"future updates will be invalid."
msgstr ""

#: ../../source/user/transactions-proposed.rst:28
msgid ""
"The proposal system allows for arbitrarily complex or recursively nested "
"authorities. If a recursive authority (i.e. an authority which requires "
"approval of 'nested' authorities on other accounts) is required for a "
"proposal, then a second proposal can be used to grant the nested "
"authority's approval. That is, a second proposal can be created which, "
"when sufficiently approved, adds the approval of a nested authority to "
"the first proposal. This multiple-proposal scheme can be used to acquire "
"approval for an arbitrarily deep authority tree."
msgstr ""

#: ../../source/user/transactions-proposed.rst:66
msgid ""
"Note that each account in the figure can carry a **different weight**. An"
" example of how to setup your permissions accordingly is given in :doc"
":`account-permissions`."
msgstr ""

#: ../../source/user/transactions-transfers.rst:3
msgid "Simple Transfers"
msgstr ""

#: ../../source/user/transactions-transfers.rst:5
msgid ""
"A simple transfer operation moves funds from user ``A`` to user ``B``. In"
" contrast to most other blockchain-based financial networks, we do "
"**not** use *addresses* or *public keys* for transfers."
msgstr ""

#: ../../source/user/transactions-transfers.rst:14
msgid "Instead, all that is needed for transfers is:"
msgstr ""

#: ../../source/user/transactions-transfers.rst:16
msgid "source account name"
msgstr ""

#: ../../source/user/transactions-transfers.rst:17
msgid "destination account name"
msgstr ""

#: ../../source/user/transactions-transfers.rst:18
msgid "funds (amount and asset)"
msgstr ""

#: ../../source/user/transactions-transfers.rst:19
msgid "memo (optional)"
msgstr ""

#: ../../source/user/transactions-transfers.rst:21
msgid "A transfer may contain a memo with arbitrary text."
msgstr ""

#: ../../source/user/transactions-transfers.rst:23
msgid ""
"The ``memo`` is **encrypted** by default can only be decrypted by the "
"participants of the transfer! The transfer fee depends on the length of "
"the memo!"
msgstr ""

#: ../../source/user/uia.rst:3
msgid "User Issued Assets"
msgstr ""

#: ../../source/user/uia.rst:5
msgid ""
"BitShares allows individuals and companies to create and issue their own "
"tokens for anything they can imagine. The potential use cases for so "
"called user-issued assets (UIA) are innumerable. On the one hand, UIAs "
"can be used as simple event tickets deposited on the customers mobile "
"phone to pass the entrance of a concert. On the other hand, they can be "
"used for crowd funding, ownership tracking or even to sell equity of a "
"company in form of stock."
msgstr ""

#: ../../source/user/uia.rst:13
msgid ""
"All you need to do is click in order to create a new UIA is a few mouse "
"clicks, define your preferred parameters for your coin, such as supply, "
"precision, symbol, description and see your coin's birth after only a few"
" seconds. From that point on, you can issue some of your coins to "
"whomever you want, sell them and see them instantly **traded against any "
"other existing coin** on BitShares."
msgstr ""

#: ../../source/user/uia.rst:20
msgid ""
"Unless you want some restriction. As the issuer, you have certain "
"privileges over your coin, for instance, you can allow trading only in "
"certain market pairs and define who actually is allowed to hold your coin"
" by using white- and blacklists. Of course, an issuer can opt-out of his "
"privileges indefinitely for the sake of trust and reputation."
msgstr ""

#: ../../source/user/uia.rst:26
msgid ""
"As the owner of that coin, you don't need to take care of all the "
"technical details of blockchain technology, such as distributed consensus"
" algorithms, blockchain development or integration. You don't even need "
"to run any mining equipment or servers, at all."
msgstr ""

#: ../../source/user/uia.rst:31
msgid "So what's the drawback?"
msgstr ""

#: ../../source/user/uia.rst:33
msgid ""
"There is a drawback in this scenario, namely, a centralized issuance of "
"new tokens. To some extend, this could be managed by a hierarchical "
"multi-signature issuer account that prevents any single entity from "
"issuing new coins but instead requires a consensus among an arbitrary set"
" of people to agree on any changes to the coin."
msgstr ""

#: ../../source/user/uia.rst:39
msgid ""
"Obviously, the regulations that apply to each kind of token vary widely "
"and are often different in every jurisdiction. Hence, BitShares comes "
"with tools that allow issuers to remain compliant with all applicable "
"regulations when issuing assets assuming regulators allow such assets in "
"the first place."
msgstr ""

#: ../../source/user/uia.rst:46
msgid "Use Cases"
msgstr ""

#: ../../source/user/uia.rst:48
msgid "Reward Points"
msgstr ""

#: ../../source/user/uia.rst:49
msgid "Fan Credits"
msgstr ""

#: ../../source/user/uia.rst:50
msgid "Flight Miles"
msgstr ""

#: ../../source/user/uia.rst:51
msgid "Event Tickets"
msgstr ""

#: ../../source/user/uia.rst:52
msgid "Digital Property"
msgstr ""

#: ../../source/user/uia.rst:53
msgid "Crowd-Funding"
msgstr ""

#: ../../source/user/uia.rst:54
msgid "Company Shares"
msgstr ""

#: ../../source/user/vesting.rst:3
msgid "Vesting Balances"
msgstr ""

#: ../../source/user/vesting.rst:5
msgid ""
"In BitShares 2, some balances are vesting over time. This feature has "
"been introduced initially in BitShares 1 when merging several blockchain "
"businesses into one blockchain."
msgstr ""

#: ../../source/user/vesting.rst:9
msgid ""
"Now, we make even more use of this functionality in such that an accounts"
" income in form of"
msgstr ""

#: ../../source/user/vesting.rst:12
msgid "worker pay,"
msgstr ""

#: ../../source/user/vesting.rst:13
msgid "witness pay,"
msgstr ""

#: ../../source/user/vesting.rst:14
msgid "the referral program, or"
msgstr ""

#: ../../source/user/vesting.rst:15
msgid "cashback"
msgstr ""

#: ../../source/user/vesting.rst:17
msgid "is vesting over several days with different strategies."
msgstr ""

#: ../../source/user/vesting.rst:19
msgid ""
"For instance, a worker can define for how long he would like his pay to "
"vest to encourage shareholders to vote for him due to no imminent "
"additional sell pressure from the worker."
msgstr ""

#: ../../source/user/vesting.rst:24
msgid "Strategies"
msgstr ""

#: ../../source/user/vesting.rst:27
msgid "CCD / Coin Days Destroyed"
msgstr ""

#: ../../source/user/vesting.rst:29
msgid ""
"The economic effect of this vesting policy is to require a certain amount"
" of \"interest\" to accrue before the full balance may be withdrawn. "
"Interest accrues as coindays (balance * length held). If some of the "
"balance is withdrawn, the remaining balance must be held longer."
msgstr ""

#: ../../source/user/vesting.rst:35
msgid "Linear Vesting with Cliff"
msgstr ""

#: ../../source/user/vesting.rst:37
msgid ""
"This vesting balance type is used to mimic traditional stock vesting "
"contracts where each day a certain amount vests until it is fully "
"matured."
msgstr ""

#: ../../source/user/voting.rst:3
msgid "Voting"
msgstr ""

#: ../../source/user/voting.rst:5
msgid ""
"If you hold some ``BTS`` tokens, you are considered a shareholder of the "
"BitShares business and thus have a say in where it should be heading in "
"future. As a shareholder you can cast a vote for three different entities"
" within the network:"
msgstr ""

#: ../../source/user/voting.rst:10
msgid ""
"**Block producers** bundle transactions into blocks and sign them with "
"their signing key. These so called *witnesses* keep the blockchain alive "
"by producing one block every few seconds and get paid by newly issued BTS"
" shares similar to Bitcoin. Their second job is to produce reliable and "
"accurate price feeds for the smartcoins."
msgstr ""

#: ../../source/user/voting.rst:15
msgid ""
"**Committee Members** :doc:`govern the blockchain and the business "
"parameters <governance>`, and define the transaction fees."
msgstr ""

#: ../../source/user/voting.rst:17
msgid ""
"**Workers** are freelancers or businesses that provide a non-profitable "
"service for the BitShares ecosystem. Essentially, they apply for a job in"
" the ecosystem by providing actual work and get paid accordingly (if the "
"shareholders approve)."
msgstr ""

#: ../../source/user/voting.rst:22
msgid ""
"Since voting might be a too time-consuming task for many shareholders, "
"BitShares offers them a way to delegate their voting power to so called "
"**proxies**. The sole purpose of proxies is to follow the ecosystem and "
"be vote according to their *followers*. This is similar to many political"
" votes where citizens vote for representatives which vote on their "
"behalf."
msgstr ""

#: ../../source/user/voting.rst:29
msgid ""
"Voting itself is **very simply** with the User interface and requires "
"only a few clicks which are described in the :doc:`voting tutorials "
"<../tutorials/voting>`"
msgstr ""

#: ../../source/user/voting.rst:33
msgid ""
"The proxy ``xeroc`` is owned by the author of the documentation articles "
"you are currently reading and has a `discussion thread avaiable "
"<https://bitsharestalk.org/index.php/topic,20792.0.html>`_."
msgstr ""

#: ../../source/user/witness.rst:3
msgid "Witnesses"
msgstr ""

#: ../../source/user/witness.rst:5
msgid ""
"In BitShares, the witnesses' job is to collect transactions, bundle them "
"into a block, sign the block and broadcast it to the network. They "
"essentially are the block producers for the underlying consensus "
"mechanism."
msgstr ""

#: ../../source/user/witness.rst:9
msgid ""
"For each successfully constructed block, a witness is payed in shares "
"that are taken from the limited reserves pool at a rate that is defined "
"by the shareholders by means of approval voting."
msgstr ""

#: ../../source/user/witness.rst:13
msgid ""
"How to run a witness is described in a :doc:`separated tutorial "
"<../tutorials/witness-howto>`."
msgstr ""

#: ../../source/user/worker.rst:3
msgid "Workers / Budget Items"
msgstr ""

#: ../../source/user/worker.rst:5
msgid ""
"Thanks to the funds stored in the reserve pool, BitShares can offer to "
"not only pay for its own development and protocol improvement but also "
"support and encourage growth of an ecosystem."
msgstr ""

#: ../../source/user/worker.rst:10
msgid "Payouts"
msgstr ""

#: ../../source/user/worker.rst:12
msgid ""
"A blockchain parameter (defined by shareholders through the committee) "
"defines the daily available budget. No more than that can be paid at any "
"time to all workers combined."
msgstr ""

#: ../../source/user/worker.rst:16
msgid "The daily budget is distributed as follows:"
msgstr ""

#: ../../source/user/worker.rst:18 ../../source/user/worker.rst:55
msgid "The available budget is taken out of reserves pool."
msgstr ""

#: ../../source/user/worker.rst:19
msgid ""
"The budget items are sorted according to their approval rate (``Pro - "
"Con``) in a descending order."
msgstr ""

#: ../../source/user/worker.rst:20 ../../source/user/worker.rst:57
msgid ""
"Starting at the worker with the highest approval rate, the requested "
"daily pay is payed until the daily budget is depleted."
msgstr ""

#: ../../source/user/worker.rst:21 ../../source/user/worker.rst:58
msgid ""
"The worker with the least approval rate that was paid may receive less "
"than the requested pay"
msgstr ""

#: ../../source/user/worker.rst:23 ../../source/user/worker.rst:60
msgid ""
"Hence, in order to be successfully funded by the BitShares ecosystem, the"
" shareholder approval for your budget item needs to be highly ranked."
msgstr ""

#: ../../source/user/worker.rst:26 ../../source/user/worker.rst:63
msgid ""
"Since the payments for workers from the non-liquid reserve pool result in"
" an increased supply of BTS, these payments are vesting over a period of "
"time defined by shareholders."
msgstr ""

#: ../../source/user/worker.rst:31
msgid "Working for BitShares"
msgstr ""

#: ../../source/user/worker.rst:33
msgid "In order to be get paid by BitShares, a proposal containing"
msgstr ""

#: ../../source/user/worker.rst:35
msgid "the date of work begin,"
msgstr ""

#: ../../source/user/worker.rst:36
msgid "the date of work end,"
msgstr ""

#: ../../source/user/worker.rst:37
msgid "a daily pay (denoted in BTS),"
msgstr ""

#: ../../source/user/worker.rst:38
msgid "the worker's name, and"
msgstr ""

#: ../../source/user/worker.rst:39
msgid "an internet address."
msgstr ""

#: ../../source/user/worker.rst:41
msgid "has to be publish on the blockchain and approved by shareholders."
msgstr ""

#: ../../source/user/worker.rst:43
msgid "A worker can also choose on of the following properties:"
msgstr ""

#: ../../source/user/worker.rst:45
msgid "**vesting**: *pay to the worker's account*"
msgstr ""

#: ../../source/user/worker.rst:46
msgid ""
"**refund**:  *return the pay back to the reserve pool to be used for "
"future projects*"
msgstr ""

#: ../../source/user/worker.rst:47
msgid ""
"**burn**:    *destroys the pay thus reducing share supply, equivalent to "
"share buy-back of a company stock.*"
msgstr ""

#: ../../source/user/worker.rst:49
msgid ""
"A blockchain parameter (defined by shareholders through the committee) "
"defines the daily available budget. No more than that can be paid at any "
"time to all so called *workers* combined."
msgstr ""

#: ../../source/user/worker.rst:53
msgid "The daily budget is distributed follows:"
msgstr ""

#: ../../source/user/worker.rst:56
msgid ""
"The budget items are sorted according to their approval rate in a "
"descending order."
msgstr ""

#: ../../source/user/worker.rst:67
msgid ""
"A description on how to create your own worker can be found in the "
":doc:`tutorials <../tutorials/worker-create>`."
msgstr ""

#: ../../source/user/worker.rst:71
msgid "Pseudo Workers"
msgstr ""

#: ../../source/user/worker.rst:73
msgid ""
"Three types of pseudo workers exist that are not primarily used to for "
"salary."
msgstr ""

#: ../../source/user/worker.rst:76
msgid "Polling Workers"
msgstr ""

#: ../../source/user/worker.rst:78
msgid ""
"A worker proposal can be used to poll the shareholders for an opinion. "
"Those workers usually have no or very small pay. Additionally, they come "
"with a *proposal*, *recommendation* or other topic on which shareholders "
"can publish a binary opinion (pro, or contra)."
msgstr ""

#: ../../source/user/worker.rst:84
msgid "Refund Worker"
msgstr ""

#: ../../source/user/worker.rst:86
msgid ""
"This worker is used to set an approval limit for worker proposals and "
"their payment by simply refunding his payment/salary to the reserve pool."
" If its amount of daily pay is as large as the daily available funds, and"
" the worker has highest approval among all worker proposals, all funds "
"will be returned to the reserves and no one will be payed. If, however, "
"an other worker proposal has more votes than the refund worker, the "
"proposal gets paid its salary, and the rest is return."
msgstr ""

#: ../../source/user/worker.rst:95
msgid "Burn Worker"
msgstr ""

#: ../../source/user/worker.rst:97
msgid ""
"This type of worker is similar to the *Refund Worker* above but **burns**"
" his pay."
msgstr ""

#: ../../source/user/you-should-know.rst:3
msgid "Things you should know"
msgstr ""

#: ../../source/user/you-should-know.rst:6
msgid "The Starters"
msgstr ""

#: ../../source/user/you-should-know.rst:8
msgid ""
"**Security and Control over accounts and funds**: No one can access your "
"funds unless you let them, intentionally, or unintentionally. With the "
"power to be independent from 3rd parties, comes the responsibility to "
":doc:`protect what belongs to you <security>`."
msgstr ""

#: ../../source/user/you-should-know.rst:13
msgid ""
"**Can interact with people directly**: With BitShares it becomes possible"
" to interact with people directly without needing to go through a "
"middleman.  Hence, BitShares is a platform of free speech that implements"
" a payment platform and exchange for digital goods."
msgstr ""

#: ../../source/user/you-should-know.rst:18
msgid ""
"**Fast**: Transactions in BitShares are verified and irrevocable in only "
"a few seconds time."
msgstr ""

#: ../../source/user/you-should-know.rst:22
msgid ""
"**Decentralized Committee**: Decisions that can effect the BitShares "
"ecosystem are made using a on-chain committee voted upon by shareholders."
"  Hence, no single entity can change the deal retroactively."
msgstr ""

#: ../../source/user/you-should-know.rst:27
msgid ""
"**Flexible**: Protocol upgrades (formerly known as *hard forks*) can be "
"implemented and executed to improve the BitShares business over time and "
"allow to react on external influences quickly."
msgstr ""

#: ../../source/user/you-should-know.rst:33
msgid "The Investors"
msgstr ""

#: ../../source/user/you-should-know.rst:35
msgid ""
"**Become Shareholder**: If you buy ``BTS`` either from a partner exchange"
" or from the DEX, you become a shareholder of the BitShares decentralized"
" business and as such can take a cut of its profits and participate in "
"votes for future directions."
msgstr ""

#: ../../source/user/you-should-know.rst:40
msgid ""
"**Expenses**: Vote for expenses of the business and hire workers to do "
"important tasks for BitShares."
msgstr ""

#: ../../source/user/you-should-know.rst:44
msgid ""
"**Leaders**: Participate in political decisions by voting for committee "
"members that represent your views!"
msgstr ""

#: ../../source/user/you-should-know.rst:48
msgid ""
"**Protocol upgrades**: Improve the technology, integrate new features and"
" adept legal and regulative changes by voting for upgrades."
msgstr ""

#: ../../source/user/you-should-know.rst:52
msgid ""
"**Decision making for a proft**: Take part in decision finding about fair"
" pricing models for transaction fees to a) increase growth and b) make "
"BitShares profitable for its shareholders"
msgstr ""

#: ../../source/user/you-should-know.rst:57
msgid "Technological Aspects"
msgstr ""

