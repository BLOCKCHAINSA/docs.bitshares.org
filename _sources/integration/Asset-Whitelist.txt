**********************************
Asset White-/Black-Lists for Users
**********************************

The issuer of an asset can define who is able to hold (and thus trade) an asset
and who is not.

To do that we need to have so called *authorities* -- one or several accounts on
the blockchain that are in charge of whitelisting, unlisting, and blacklisting
customers accordingly.

Use Case
########

Some 3rd party service providers may want to select which customers are allowed
to hold their assets , e.g. after verified their identity for KYC/AML. Those
services can use so called *whitelists* (or, alternatively, *blacklists*) of
their assets that will prevent unauthorized participants to use this particular
asset.

Example
#######

Let's assume user ``alice`` wants to own ``G.USD`` which is restricted by a
whitelists. Whenever someone tries to send ``G.USD`` to ``alice``, the blockchain
will reject the transaction as invalid. Only after being added to the assets's
whitelist by the issuer authority, alice will be able to hold ``G.USD``.

.. note:: By removing a user from the whitelist, funds can effectively be
   frozen.

We first set account ``issuer`` to be responsible for the whitelist of asset
``G.USD``:::

    update_asset G.USD "" "{'asset_issuer_permission_flags':white_list,'whitelist_authorities':issuer}" true

We can now allow users to trade ``G.USD`` by adding them to the white-list of
``user`` (see :ref:`whitelist_accounts`):::

    whitelist_accont issuer alice white_listed true

Definition
##########

White- and Black-listing of assets work with the following API call:

.. doxygenfunction:: graphene::wallet::wallet_api::update_asset()

It expects `asset_options` in the from of

.. doxygenstruct:: graphene::chain::asset_options
   :members:
